{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./assets/particle2.png","webpack:///./assets/particleS2.png","webpack:///./assets/perlin-512.png","webpack:///./assets/sounds/amazingu.wav","webpack:///./assets/sounds/bgm.wav","webpack:///./assets/sounds/munyu_basic.wav","webpack:///./js/Block.js","webpack:///./js/Concern.js","webpack:///./js/GPUParticleSystem.js","webpack:///./js/Munyu.js","webpack:///./js/ParticleGenerator.js","webpack:///./js/Scene.js","webpack:///./js/background.js","webpack:///./js/environment.js","webpack:///./js/index.js","webpack:///./js/munyuGenerator.js","webpack:///./style.scss","webpack:///./shaders/clouds.frag","webpack:///./shaders/clouds.vert","webpack:///./shaders/glow.frag","webpack:///./shaders/glow.vert","webpack:///./shaders/gradient.frag","webpack:///./shaders/gradient.vert","webpack:///./shaders/shell.frag","webpack:///./shaders/shell.vert","webpack:///./style.scss?1f92"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","parentHotUpdateCallback","window","hotAvailableFilesMap","hotRequestedFilesMap","hotUpdate","hotWaitingFiles","hotChunksLoading","hotUpdateDownloaded","hotAddUpdateChunk","hotCurrentChildModule","hotApplyOnUpdate","hotCurrentHash","hotRequestTimeout","hotCurrentModuleData","hotCurrentParents","hotCurrentParentsTemp","hotStatusHandlers","hotStatus","hotSetStatus","newStatus","hotDeferred","hotUpdateNewHash","hotWaitingFilesMap","toModuleId","id","hotCheck","Error","requestTimeout","Promise","resolve","reject","XMLHttpRequest","request","requestPath","p","open","timeout","send","err","onreadystatechange","readyState","status","update","JSON","parse","responseText","e","hotDownloadManifest","then","c","h","promise","hotEnsureUpdateChunk","head","document","getElementsByTagName","script","createElement","charset","src","appendChild","hotDownloadUpdateChunk","deferred","hotApply","outdatedModules","options","cb","module","getAffectedStuff","updateModuleId","outdatedDependencies","queue","slice","map","chain","queueItem","pop","installedModules","hot","_selfAccepted","_selfDeclined","type","_main","parents","parentId","parent","_declinedDependencies","concat","indexOf","_acceptedDependencies","addAllToSet","a","b","item","appliedUpdate","warnUnexpectedRequire","console","warn","abortError","doApply","doDispose","chainInfo","join","onDeclined","ignoreDeclined","onUnaccepted","ignoreUnaccepted","onAccepted","onDisposed","idx","outdatedSelfAcceptedModules","errorHandler","keys","forEach","hotDisposeChunk","dependency","moduleOutdatedDependencies","disposeHandlers","_disposeHandlers","active","children","child","error","callbacks","onErrored","dependencyId","ignoreErrored","err2","originalError","0","exports","l","accept","dep","callback","undefined","decline","dispose","addDisposeHandler","removeDisposeHandler","check","addStatusHandler","removeStatusHandler","hotCreateModule","me","fn","ObjectFactory","name","configurable","enumerable","get","set","value","defineProperty","finishChunkLoading","t","mode","hotCreateRequire","m","d","getter","o","r","Symbol","toStringTag","__esModule","ns","create","key","bind","n","object","property","jsonpArray","oldJsonpFunction","pointLight","THREE","PointLight","time","geo","SphereGeometry","mat","MeshBasicMaterial","color","transparent","blending","AdditiveBlending","side","DoubleSide","opacity","shaderMat","ShaderMaterial","uniforms","rimColor","Color","vertexShader","fragmentShader","depthWrite","multiplyScalar","sphere","Mesh","add","texture","CanvasTexture","canvas","width","height","context","getContext","fillStyle","fillRect","generateTexture","magFilter","NearestFilter","wrapT","RepeatWrapping","wrapS","repeat","outerSphereGeo","this","outerSphereMat","outerSphere","castShadow","receiveShadow","particleMat","PointsMaterial","size","gradient","createRadialGradient","addColorStop","Texture","needsUpdate","generateParticles","Points","getBlock","Date","now","concernObj","Object3D","softConcernGeo","softConcernMat","scale","freq","rimPower","angledConcernGeo","angledConcernMat","angledConcernMesh","concernGeoLayer","concernMatLayer","concernMeshLayer","concernMatLayer2","MultiplyBlending","getConcern","GPUParticleSystem","self","PARTICLE_COUNT","maxParticles","PARTICLE_CONTAINERS","containerCount","PARTICLE_NOISE_TEXTURE","particleNoiseTex","PARTICLE_SPRITE_TEXTURE","particleSpriteTex","PARTICLES_PER_CONTAINER","Math","ceil","PARTICLE_CURSOR","GPUParticleShader","rand","random","textureLoader","TextureLoader","perlinNoise","particleImg","load","particleShaderMat","uTime","uScale","tNoise","tSprite","defaultAttributeValues","particlePositionsStartTime","particleVelColSizeLife","particleContainers","arguments","init","GPUParticleContainer","spawnParticle","floor","constructor","particleSystem","DPR","devicePixelRatio","MAX_ATTRIBUTES","UINT8_VIEW","Uint8Array","FLOAT_VIEW","Float32Array","buffer","decodeFloat","x","y","z","w","particles","deadParticles","particlesAvailableSlot","particleUpdate","particleShaderGeo","BufferGeometry","particleVertices","particleVelocity","particleTurbulence","addAttribute","BufferAttribute","setDynamic","posStart","getAttribute","velCol","velocityAttr","turbulenceAttr","frustumCulled","position","Vector3","velocity","positionRandomness","velocityRandomness","colorRandomness","turbulence","lifetime","sizeRandomness","smoothPosition","offset","count","copy","array","velX","velY","velZ","rgb","hex","g","hexToRgb","geometryUpdate","updateRange","faceObj","eyeGeo","eyeMat","flatShading","leftEyeMesh","rightEyeMesh","mouthPointsArray","mouthCurve","CatmullRomCurve3","mouthGeo","TubeGeometry","mouthMesh","rotation","PI","faceGeo","faceMat","faceMesh","hatGeo","glowingHatMat","fragShader","hat","bodyGeo","CylinderGeometry","bodyMat","skinning","munyu","SkinnedMesh","bones","root","Bone","spine1","spine2","spine3","spine4","spine5","vertices","skinIndex","calculateSkinIndex","skinWeight","calculateSkinWeight","skinIndices","Vector4","skinWeights","skeleton","Skeleton","shadowGeo","CircleGeometry","shadowMat","shadowMesh","boneNum","vertice","number","getMunyu","material","setMunyuState","state","idle","speed","angle","sin","hatPos","lerp","move","targetPos","cos","log","setCameraPos","camPos","audioLoader","AudioLoader","listener","AudioListener","munyuAudio","Audio","amazinguAudio","getListener","munyuSound","setBuffer","setLoop","setVolume","amazinguSound","playMunyu","isPlaying","stop","play","playAmazingu","tick","clock","Clock","spawnerOptions","spawnRate","horizontalSpeed","verticalSpeed","timeScale","colors","randomIntFromInterval","min","max","delta","getDelta","HEIGHT","innerHeight","WIDTH","innerWidth","scene","ambientLight","AmbientLight","directionalLight","DirectionalLight","lights","createLights","Scene","renderer","WebGLRenderer","alpha","antialias","setPixelRatio","setSize","gammaInput","gammaOutput","shadowMap","enabled","BasicShadowMap","createRenderer","camera","aspectRatio","PerspectiveCamera","lookAt","createCamera","gradSkybox","controls","OrbitControls","domElement","target","maxDistance","createControl","_background2","default","particleGenerator","CameraHelper","ParticleGenerator","block","Environment","getGround","Block","concern","Concern","concernMesh","munyuGenerator","MunyuGenerator","munyus","instantiate","pointVertex","getPos","getSpeed","getColor","start","addMunyus","render","onWindowResize","aspect","updateProjectionMatrix","onMouseClick","gradObj","gradMesh","BoxGeometry","uColorA","uColorB","vertShader","BackSide","groundGeo","groundMat","groundMesh","oldRootElem","querySelector","newRootElem","cloneNode","parentNode","insertBefore","removeChild","getElementById","resizeCanvas","style","mouseClick","onresize","onclick","requestAnimationFrame","munyuColors","munyuNum","pointGeo","Geometry","getRandomPos","prevIndex","index","config","heightSeg","widthSeg","LineBasicMaterial","gridObject","gridGeo","stepw","steph","line","LineSegments","createGrid","num","Munyu","randomVertex","content","hmr","transform","insertInto","locals","newContent"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n \tfunction hotDisposeChunk(chunkId) {\n \t\tdelete installedChunks[chunkId];\n \t}\n \tvar parentHotUpdateCallback = window[\"webpackHotUpdate\"];\n \twindow[\"webpackHotUpdate\"] = // eslint-disable-next-line no-unused-vars\n \tfunction webpackHotUpdateCallback(chunkId, moreModules) {\n \t\thotAddUpdateChunk(chunkId, moreModules);\n \t\tif (parentHotUpdateCallback) parentHotUpdateCallback(chunkId, moreModules);\n \t} ;\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotDownloadUpdateChunk(chunkId) {\n \t\tvar head = document.getElementsByTagName(\"head\")[0];\n \t\tvar script = document.createElement(\"script\");\n \t\tscript.charset = \"utf-8\";\n \t\tscript.src = __webpack_require__.p + \"\" + chunkId + \".\" + hotCurrentHash + \".hot-update.js\";\n \t\t;\n \t\thead.appendChild(script);\n \t}\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotDownloadManifest(requestTimeout) {\n \t\trequestTimeout = requestTimeout || 10000;\n \t\treturn new Promise(function(resolve, reject) {\n \t\t\tif (typeof XMLHttpRequest === \"undefined\") {\n \t\t\t\treturn reject(new Error(\"No browser support\"));\n \t\t\t}\n \t\t\ttry {\n \t\t\t\tvar request = new XMLHttpRequest();\n \t\t\t\tvar requestPath = __webpack_require__.p + \"\" + hotCurrentHash + \".hot-update.json\";\n \t\t\t\trequest.open(\"GET\", requestPath, true);\n \t\t\t\trequest.timeout = requestTimeout;\n \t\t\t\trequest.send(null);\n \t\t\t} catch (err) {\n \t\t\t\treturn reject(err);\n \t\t\t}\n \t\t\trequest.onreadystatechange = function() {\n \t\t\t\tif (request.readyState !== 4) return;\n \t\t\t\tif (request.status === 0) {\n \t\t\t\t\t// timeout\n \t\t\t\t\treject(\n \t\t\t\t\t\tnew Error(\"Manifest request to \" + requestPath + \" timed out.\")\n \t\t\t\t\t);\n \t\t\t\t} else if (request.status === 404) {\n \t\t\t\t\t// no update available\n \t\t\t\t\tresolve();\n \t\t\t\t} else if (request.status !== 200 && request.status !== 304) {\n \t\t\t\t\t// other failure\n \t\t\t\t\treject(new Error(\"Manifest request to \" + requestPath + \" failed.\"));\n \t\t\t\t} else {\n \t\t\t\t\t// success\n \t\t\t\t\ttry {\n \t\t\t\t\t\tvar update = JSON.parse(request.responseText);\n \t\t\t\t\t} catch (e) {\n \t\t\t\t\t\treject(e);\n \t\t\t\t\t\treturn;\n \t\t\t\t\t}\n \t\t\t\t\tresolve(update);\n \t\t\t\t}\n \t\t\t};\n \t\t});\n \t}\n\n \tvar hotApplyOnUpdate = true;\n \t// eslint-disable-next-line no-unused-vars\n \tvar hotCurrentHash = \"f99129b80817c18b4f27\";\n \tvar hotRequestTimeout = 10000;\n \tvar hotCurrentModuleData = {};\n \tvar hotCurrentChildModule;\n \t// eslint-disable-next-line no-unused-vars\n \tvar hotCurrentParents = [];\n \t// eslint-disable-next-line no-unused-vars\n \tvar hotCurrentParentsTemp = [];\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotCreateRequire(moduleId) {\n \t\tvar me = installedModules[moduleId];\n \t\tif (!me) return __webpack_require__;\n \t\tvar fn = function(request) {\n \t\t\tif (me.hot.active) {\n \t\t\t\tif (installedModules[request]) {\n \t\t\t\t\tif (installedModules[request].parents.indexOf(moduleId) === -1) {\n \t\t\t\t\t\tinstalledModules[request].parents.push(moduleId);\n \t\t\t\t\t}\n \t\t\t\t} else {\n \t\t\t\t\thotCurrentParents = [moduleId];\n \t\t\t\t\thotCurrentChildModule = request;\n \t\t\t\t}\n \t\t\t\tif (me.children.indexOf(request) === -1) {\n \t\t\t\t\tme.children.push(request);\n \t\t\t\t}\n \t\t\t} else {\n \t\t\t\tconsole.warn(\n \t\t\t\t\t\"[HMR] unexpected require(\" +\n \t\t\t\t\t\trequest +\n \t\t\t\t\t\t\") from disposed module \" +\n \t\t\t\t\t\tmoduleId\n \t\t\t\t);\n \t\t\t\thotCurrentParents = [];\n \t\t\t}\n \t\t\treturn __webpack_require__(request);\n \t\t};\n \t\tvar ObjectFactory = function ObjectFactory(name) {\n \t\t\treturn {\n \t\t\t\tconfigurable: true,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: function() {\n \t\t\t\t\treturn __webpack_require__[name];\n \t\t\t\t},\n \t\t\t\tset: function(value) {\n \t\t\t\t\t__webpack_require__[name] = value;\n \t\t\t\t}\n \t\t\t};\n \t\t};\n \t\tfor (var name in __webpack_require__) {\n \t\t\tif (\n \t\t\t\tObject.prototype.hasOwnProperty.call(__webpack_require__, name) &&\n \t\t\t\tname !== \"e\" &&\n \t\t\t\tname !== \"t\"\n \t\t\t) {\n \t\t\t\tObject.defineProperty(fn, name, ObjectFactory(name));\n \t\t\t}\n \t\t}\n \t\tfn.e = function(chunkId) {\n \t\t\tif (hotStatus === \"ready\") hotSetStatus(\"prepare\");\n \t\t\thotChunksLoading++;\n \t\t\treturn __webpack_require__.e(chunkId).then(finishChunkLoading, function(err) {\n \t\t\t\tfinishChunkLoading();\n \t\t\t\tthrow err;\n \t\t\t});\n\n \t\t\tfunction finishChunkLoading() {\n \t\t\t\thotChunksLoading--;\n \t\t\t\tif (hotStatus === \"prepare\") {\n \t\t\t\t\tif (!hotWaitingFilesMap[chunkId]) {\n \t\t\t\t\t\thotEnsureUpdateChunk(chunkId);\n \t\t\t\t\t}\n \t\t\t\t\tif (hotChunksLoading === 0 && hotWaitingFiles === 0) {\n \t\t\t\t\t\thotUpdateDownloaded();\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t};\n \t\tfn.t = function(value, mode) {\n \t\t\tif (mode & 1) value = fn(value);\n \t\t\treturn __webpack_require__.t(value, mode & ~1);\n \t\t};\n \t\treturn fn;\n \t}\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotCreateModule(moduleId) {\n \t\tvar hot = {\n \t\t\t// private stuff\n \t\t\t_acceptedDependencies: {},\n \t\t\t_declinedDependencies: {},\n \t\t\t_selfAccepted: false,\n \t\t\t_selfDeclined: false,\n \t\t\t_disposeHandlers: [],\n \t\t\t_main: hotCurrentChildModule !== moduleId,\n\n \t\t\t// Module API\n \t\t\tactive: true,\n \t\t\taccept: function(dep, callback) {\n \t\t\t\tif (dep === undefined) hot._selfAccepted = true;\n \t\t\t\telse if (typeof dep === \"function\") hot._selfAccepted = dep;\n \t\t\t\telse if (typeof dep === \"object\")\n \t\t\t\t\tfor (var i = 0; i < dep.length; i++)\n \t\t\t\t\t\thot._acceptedDependencies[dep[i]] = callback || function() {};\n \t\t\t\telse hot._acceptedDependencies[dep] = callback || function() {};\n \t\t\t},\n \t\t\tdecline: function(dep) {\n \t\t\t\tif (dep === undefined) hot._selfDeclined = true;\n \t\t\t\telse if (typeof dep === \"object\")\n \t\t\t\t\tfor (var i = 0; i < dep.length; i++)\n \t\t\t\t\t\thot._declinedDependencies[dep[i]] = true;\n \t\t\t\telse hot._declinedDependencies[dep] = true;\n \t\t\t},\n \t\t\tdispose: function(callback) {\n \t\t\t\thot._disposeHandlers.push(callback);\n \t\t\t},\n \t\t\taddDisposeHandler: function(callback) {\n \t\t\t\thot._disposeHandlers.push(callback);\n \t\t\t},\n \t\t\tremoveDisposeHandler: function(callback) {\n \t\t\t\tvar idx = hot._disposeHandlers.indexOf(callback);\n \t\t\t\tif (idx >= 0) hot._disposeHandlers.splice(idx, 1);\n \t\t\t},\n\n \t\t\t// Management API\n \t\t\tcheck: hotCheck,\n \t\t\tapply: hotApply,\n \t\t\tstatus: function(l) {\n \t\t\t\tif (!l) return hotStatus;\n \t\t\t\thotStatusHandlers.push(l);\n \t\t\t},\n \t\t\taddStatusHandler: function(l) {\n \t\t\t\thotStatusHandlers.push(l);\n \t\t\t},\n \t\t\tremoveStatusHandler: function(l) {\n \t\t\t\tvar idx = hotStatusHandlers.indexOf(l);\n \t\t\t\tif (idx >= 0) hotStatusHandlers.splice(idx, 1);\n \t\t\t},\n\n \t\t\t//inherit from previous dispose call\n \t\t\tdata: hotCurrentModuleData[moduleId]\n \t\t};\n \t\thotCurrentChildModule = undefined;\n \t\treturn hot;\n \t}\n\n \tvar hotStatusHandlers = [];\n \tvar hotStatus = \"idle\";\n\n \tfunction hotSetStatus(newStatus) {\n \t\thotStatus = newStatus;\n \t\tfor (var i = 0; i < hotStatusHandlers.length; i++)\n \t\t\thotStatusHandlers[i].call(null, newStatus);\n \t}\n\n \t// while downloading\n \tvar hotWaitingFiles = 0;\n \tvar hotChunksLoading = 0;\n \tvar hotWaitingFilesMap = {};\n \tvar hotRequestedFilesMap = {};\n \tvar hotAvailableFilesMap = {};\n \tvar hotDeferred;\n\n \t// The update info\n \tvar hotUpdate, hotUpdateNewHash;\n\n \tfunction toModuleId(id) {\n \t\tvar isNumber = +id + \"\" === id;\n \t\treturn isNumber ? +id : id;\n \t}\n\n \tfunction hotCheck(apply) {\n \t\tif (hotStatus !== \"idle\") {\n \t\t\tthrow new Error(\"check() is only allowed in idle status\");\n \t\t}\n \t\thotApplyOnUpdate = apply;\n \t\thotSetStatus(\"check\");\n \t\treturn hotDownloadManifest(hotRequestTimeout).then(function(update) {\n \t\t\tif (!update) {\n \t\t\t\thotSetStatus(\"idle\");\n \t\t\t\treturn null;\n \t\t\t}\n \t\t\thotRequestedFilesMap = {};\n \t\t\thotWaitingFilesMap = {};\n \t\t\thotAvailableFilesMap = update.c;\n \t\t\thotUpdateNewHash = update.h;\n\n \t\t\thotSetStatus(\"prepare\");\n \t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\thotDeferred = {\n \t\t\t\t\tresolve: resolve,\n \t\t\t\t\treject: reject\n \t\t\t\t};\n \t\t\t});\n \t\t\thotUpdate = {};\n \t\t\tfor(var chunkId in installedChunks)\n \t\t\t// eslint-disable-next-line no-lone-blocks\n \t\t\t{\n \t\t\t\t/*globals chunkId */\n \t\t\t\thotEnsureUpdateChunk(chunkId);\n \t\t\t}\n \t\t\tif (\n \t\t\t\thotStatus === \"prepare\" &&\n \t\t\t\thotChunksLoading === 0 &&\n \t\t\t\thotWaitingFiles === 0\n \t\t\t) {\n \t\t\t\thotUpdateDownloaded();\n \t\t\t}\n \t\t\treturn promise;\n \t\t});\n \t}\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotAddUpdateChunk(chunkId, moreModules) {\n \t\tif (!hotAvailableFilesMap[chunkId] || !hotRequestedFilesMap[chunkId])\n \t\t\treturn;\n \t\thotRequestedFilesMap[chunkId] = false;\n \t\tfor (var moduleId in moreModules) {\n \t\t\tif (Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\thotUpdate[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif (--hotWaitingFiles === 0 && hotChunksLoading === 0) {\n \t\t\thotUpdateDownloaded();\n \t\t}\n \t}\n\n \tfunction hotEnsureUpdateChunk(chunkId) {\n \t\tif (!hotAvailableFilesMap[chunkId]) {\n \t\t\thotWaitingFilesMap[chunkId] = true;\n \t\t} else {\n \t\t\thotRequestedFilesMap[chunkId] = true;\n \t\t\thotWaitingFiles++;\n \t\t\thotDownloadUpdateChunk(chunkId);\n \t\t}\n \t}\n\n \tfunction hotUpdateDownloaded() {\n \t\thotSetStatus(\"ready\");\n \t\tvar deferred = hotDeferred;\n \t\thotDeferred = null;\n \t\tif (!deferred) return;\n \t\tif (hotApplyOnUpdate) {\n \t\t\t// Wrap deferred object in Promise to mark it as a well-handled Promise to\n \t\t\t// avoid triggering uncaught exception warning in Chrome.\n \t\t\t// See https://bugs.chromium.org/p/chromium/issues/detail?id=465666\n \t\t\tPromise.resolve()\n \t\t\t\t.then(function() {\n \t\t\t\t\treturn hotApply(hotApplyOnUpdate);\n \t\t\t\t})\n \t\t\t\t.then(\n \t\t\t\t\tfunction(result) {\n \t\t\t\t\t\tdeferred.resolve(result);\n \t\t\t\t\t},\n \t\t\t\t\tfunction(err) {\n \t\t\t\t\t\tdeferred.reject(err);\n \t\t\t\t\t}\n \t\t\t\t);\n \t\t} else {\n \t\t\tvar outdatedModules = [];\n \t\t\tfor (var id in hotUpdate) {\n \t\t\t\tif (Object.prototype.hasOwnProperty.call(hotUpdate, id)) {\n \t\t\t\t\toutdatedModules.push(toModuleId(id));\n \t\t\t\t}\n \t\t\t}\n \t\t\tdeferred.resolve(outdatedModules);\n \t\t}\n \t}\n\n \tfunction hotApply(options) {\n \t\tif (hotStatus !== \"ready\")\n \t\t\tthrow new Error(\"apply() is only allowed in ready status\");\n \t\toptions = options || {};\n\n \t\tvar cb;\n \t\tvar i;\n \t\tvar j;\n \t\tvar module;\n \t\tvar moduleId;\n\n \t\tfunction getAffectedStuff(updateModuleId) {\n \t\t\tvar outdatedModules = [updateModuleId];\n \t\t\tvar outdatedDependencies = {};\n\n \t\t\tvar queue = outdatedModules.slice().map(function(id) {\n \t\t\t\treturn {\n \t\t\t\t\tchain: [id],\n \t\t\t\t\tid: id\n \t\t\t\t};\n \t\t\t});\n \t\t\twhile (queue.length > 0) {\n \t\t\t\tvar queueItem = queue.pop();\n \t\t\t\tvar moduleId = queueItem.id;\n \t\t\t\tvar chain = queueItem.chain;\n \t\t\t\tmodule = installedModules[moduleId];\n \t\t\t\tif (!module || module.hot._selfAccepted) continue;\n \t\t\t\tif (module.hot._selfDeclined) {\n \t\t\t\t\treturn {\n \t\t\t\t\t\ttype: \"self-declined\",\n \t\t\t\t\t\tchain: chain,\n \t\t\t\t\t\tmoduleId: moduleId\n \t\t\t\t\t};\n \t\t\t\t}\n \t\t\t\tif (module.hot._main) {\n \t\t\t\t\treturn {\n \t\t\t\t\t\ttype: \"unaccepted\",\n \t\t\t\t\t\tchain: chain,\n \t\t\t\t\t\tmoduleId: moduleId\n \t\t\t\t\t};\n \t\t\t\t}\n \t\t\t\tfor (var i = 0; i < module.parents.length; i++) {\n \t\t\t\t\tvar parentId = module.parents[i];\n \t\t\t\t\tvar parent = installedModules[parentId];\n \t\t\t\t\tif (!parent) continue;\n \t\t\t\t\tif (parent.hot._declinedDependencies[moduleId]) {\n \t\t\t\t\t\treturn {\n \t\t\t\t\t\t\ttype: \"declined\",\n \t\t\t\t\t\t\tchain: chain.concat([parentId]),\n \t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\tparentId: parentId\n \t\t\t\t\t\t};\n \t\t\t\t\t}\n \t\t\t\t\tif (outdatedModules.indexOf(parentId) !== -1) continue;\n \t\t\t\t\tif (parent.hot._acceptedDependencies[moduleId]) {\n \t\t\t\t\t\tif (!outdatedDependencies[parentId])\n \t\t\t\t\t\t\toutdatedDependencies[parentId] = [];\n \t\t\t\t\t\taddAllToSet(outdatedDependencies[parentId], [moduleId]);\n \t\t\t\t\t\tcontinue;\n \t\t\t\t\t}\n \t\t\t\t\tdelete outdatedDependencies[parentId];\n \t\t\t\t\toutdatedModules.push(parentId);\n \t\t\t\t\tqueue.push({\n \t\t\t\t\t\tchain: chain.concat([parentId]),\n \t\t\t\t\t\tid: parentId\n \t\t\t\t\t});\n \t\t\t\t}\n \t\t\t}\n\n \t\t\treturn {\n \t\t\t\ttype: \"accepted\",\n \t\t\t\tmoduleId: updateModuleId,\n \t\t\t\toutdatedModules: outdatedModules,\n \t\t\t\toutdatedDependencies: outdatedDependencies\n \t\t\t};\n \t\t}\n\n \t\tfunction addAllToSet(a, b) {\n \t\t\tfor (var i = 0; i < b.length; i++) {\n \t\t\t\tvar item = b[i];\n \t\t\t\tif (a.indexOf(item) === -1) a.push(item);\n \t\t\t}\n \t\t}\n\n \t\t// at begin all updates modules are outdated\n \t\t// the \"outdated\" status can propagate to parents if they don't accept the children\n \t\tvar outdatedDependencies = {};\n \t\tvar outdatedModules = [];\n \t\tvar appliedUpdate = {};\n\n \t\tvar warnUnexpectedRequire = function warnUnexpectedRequire() {\n \t\t\tconsole.warn(\n \t\t\t\t\"[HMR] unexpected require(\" + result.moduleId + \") to disposed module\"\n \t\t\t);\n \t\t};\n\n \t\tfor (var id in hotUpdate) {\n \t\t\tif (Object.prototype.hasOwnProperty.call(hotUpdate, id)) {\n \t\t\t\tmoduleId = toModuleId(id);\n \t\t\t\t/** @type {TODO} */\n \t\t\t\tvar result;\n \t\t\t\tif (hotUpdate[id]) {\n \t\t\t\t\tresult = getAffectedStuff(moduleId);\n \t\t\t\t} else {\n \t\t\t\t\tresult = {\n \t\t\t\t\t\ttype: \"disposed\",\n \t\t\t\t\t\tmoduleId: id\n \t\t\t\t\t};\n \t\t\t\t}\n \t\t\t\t/** @type {Error|false} */\n \t\t\t\tvar abortError = false;\n \t\t\t\tvar doApply = false;\n \t\t\t\tvar doDispose = false;\n \t\t\t\tvar chainInfo = \"\";\n \t\t\t\tif (result.chain) {\n \t\t\t\t\tchainInfo = \"\\nUpdate propagation: \" + result.chain.join(\" -> \");\n \t\t\t\t}\n \t\t\t\tswitch (result.type) {\n \t\t\t\t\tcase \"self-declined\":\n \t\t\t\t\t\tif (options.onDeclined) options.onDeclined(result);\n \t\t\t\t\t\tif (!options.ignoreDeclined)\n \t\t\t\t\t\t\tabortError = new Error(\n \t\t\t\t\t\t\t\t\"Aborted because of self decline: \" +\n \t\t\t\t\t\t\t\t\tresult.moduleId +\n \t\t\t\t\t\t\t\t\tchainInfo\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"declined\":\n \t\t\t\t\t\tif (options.onDeclined) options.onDeclined(result);\n \t\t\t\t\t\tif (!options.ignoreDeclined)\n \t\t\t\t\t\t\tabortError = new Error(\n \t\t\t\t\t\t\t\t\"Aborted because of declined dependency: \" +\n \t\t\t\t\t\t\t\t\tresult.moduleId +\n \t\t\t\t\t\t\t\t\t\" in \" +\n \t\t\t\t\t\t\t\t\tresult.parentId +\n \t\t\t\t\t\t\t\t\tchainInfo\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"unaccepted\":\n \t\t\t\t\t\tif (options.onUnaccepted) options.onUnaccepted(result);\n \t\t\t\t\t\tif (!options.ignoreUnaccepted)\n \t\t\t\t\t\t\tabortError = new Error(\n \t\t\t\t\t\t\t\t\"Aborted because \" + moduleId + \" is not accepted\" + chainInfo\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"accepted\":\n \t\t\t\t\t\tif (options.onAccepted) options.onAccepted(result);\n \t\t\t\t\t\tdoApply = true;\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"disposed\":\n \t\t\t\t\t\tif (options.onDisposed) options.onDisposed(result);\n \t\t\t\t\t\tdoDispose = true;\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tdefault:\n \t\t\t\t\t\tthrow new Error(\"Unexception type \" + result.type);\n \t\t\t\t}\n \t\t\t\tif (abortError) {\n \t\t\t\t\thotSetStatus(\"abort\");\n \t\t\t\t\treturn Promise.reject(abortError);\n \t\t\t\t}\n \t\t\t\tif (doApply) {\n \t\t\t\t\tappliedUpdate[moduleId] = hotUpdate[moduleId];\n \t\t\t\t\taddAllToSet(outdatedModules, result.outdatedModules);\n \t\t\t\t\tfor (moduleId in result.outdatedDependencies) {\n \t\t\t\t\t\tif (\n \t\t\t\t\t\t\tObject.prototype.hasOwnProperty.call(\n \t\t\t\t\t\t\t\tresult.outdatedDependencies,\n \t\t\t\t\t\t\t\tmoduleId\n \t\t\t\t\t\t\t)\n \t\t\t\t\t\t) {\n \t\t\t\t\t\t\tif (!outdatedDependencies[moduleId])\n \t\t\t\t\t\t\t\toutdatedDependencies[moduleId] = [];\n \t\t\t\t\t\t\taddAllToSet(\n \t\t\t\t\t\t\t\toutdatedDependencies[moduleId],\n \t\t\t\t\t\t\t\tresult.outdatedDependencies[moduleId]\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t\tif (doDispose) {\n \t\t\t\t\taddAllToSet(outdatedModules, [result.moduleId]);\n \t\t\t\t\tappliedUpdate[moduleId] = warnUnexpectedRequire;\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// Store self accepted outdated modules to require them later by the module system\n \t\tvar outdatedSelfAcceptedModules = [];\n \t\tfor (i = 0; i < outdatedModules.length; i++) {\n \t\t\tmoduleId = outdatedModules[i];\n \t\t\tif (\n \t\t\t\tinstalledModules[moduleId] &&\n \t\t\t\tinstalledModules[moduleId].hot._selfAccepted\n \t\t\t)\n \t\t\t\toutdatedSelfAcceptedModules.push({\n \t\t\t\t\tmodule: moduleId,\n \t\t\t\t\terrorHandler: installedModules[moduleId].hot._selfAccepted\n \t\t\t\t});\n \t\t}\n\n \t\t// Now in \"dispose\" phase\n \t\thotSetStatus(\"dispose\");\n \t\tObject.keys(hotAvailableFilesMap).forEach(function(chunkId) {\n \t\t\tif (hotAvailableFilesMap[chunkId] === false) {\n \t\t\t\thotDisposeChunk(chunkId);\n \t\t\t}\n \t\t});\n\n \t\tvar idx;\n \t\tvar queue = outdatedModules.slice();\n \t\twhile (queue.length > 0) {\n \t\t\tmoduleId = queue.pop();\n \t\t\tmodule = installedModules[moduleId];\n \t\t\tif (!module) continue;\n\n \t\t\tvar data = {};\n\n \t\t\t// Call dispose handlers\n \t\t\tvar disposeHandlers = module.hot._disposeHandlers;\n \t\t\tfor (j = 0; j < disposeHandlers.length; j++) {\n \t\t\t\tcb = disposeHandlers[j];\n \t\t\t\tcb(data);\n \t\t\t}\n \t\t\thotCurrentModuleData[moduleId] = data;\n\n \t\t\t// disable module (this disables requires from this module)\n \t\t\tmodule.hot.active = false;\n\n \t\t\t// remove module from cache\n \t\t\tdelete installedModules[moduleId];\n\n \t\t\t// when disposing there is no need to call dispose handler\n \t\t\tdelete outdatedDependencies[moduleId];\n\n \t\t\t// remove \"parents\" references from all children\n \t\t\tfor (j = 0; j < module.children.length; j++) {\n \t\t\t\tvar child = installedModules[module.children[j]];\n \t\t\t\tif (!child) continue;\n \t\t\t\tidx = child.parents.indexOf(moduleId);\n \t\t\t\tif (idx >= 0) {\n \t\t\t\t\tchild.parents.splice(idx, 1);\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// remove outdated dependency from module children\n \t\tvar dependency;\n \t\tvar moduleOutdatedDependencies;\n \t\tfor (moduleId in outdatedDependencies) {\n \t\t\tif (\n \t\t\t\tObject.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)\n \t\t\t) {\n \t\t\t\tmodule = installedModules[moduleId];\n \t\t\t\tif (module) {\n \t\t\t\t\tmoduleOutdatedDependencies = outdatedDependencies[moduleId];\n \t\t\t\t\tfor (j = 0; j < moduleOutdatedDependencies.length; j++) {\n \t\t\t\t\t\tdependency = moduleOutdatedDependencies[j];\n \t\t\t\t\t\tidx = module.children.indexOf(dependency);\n \t\t\t\t\t\tif (idx >= 0) module.children.splice(idx, 1);\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// Not in \"apply\" phase\n \t\thotSetStatus(\"apply\");\n\n \t\thotCurrentHash = hotUpdateNewHash;\n\n \t\t// insert new code\n \t\tfor (moduleId in appliedUpdate) {\n \t\t\tif (Object.prototype.hasOwnProperty.call(appliedUpdate, moduleId)) {\n \t\t\t\tmodules[moduleId] = appliedUpdate[moduleId];\n \t\t\t}\n \t\t}\n\n \t\t// call accept handlers\n \t\tvar error = null;\n \t\tfor (moduleId in outdatedDependencies) {\n \t\t\tif (\n \t\t\t\tObject.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)\n \t\t\t) {\n \t\t\t\tmodule = installedModules[moduleId];\n \t\t\t\tif (module) {\n \t\t\t\t\tmoduleOutdatedDependencies = outdatedDependencies[moduleId];\n \t\t\t\t\tvar callbacks = [];\n \t\t\t\t\tfor (i = 0; i < moduleOutdatedDependencies.length; i++) {\n \t\t\t\t\t\tdependency = moduleOutdatedDependencies[i];\n \t\t\t\t\t\tcb = module.hot._acceptedDependencies[dependency];\n \t\t\t\t\t\tif (cb) {\n \t\t\t\t\t\t\tif (callbacks.indexOf(cb) !== -1) continue;\n \t\t\t\t\t\t\tcallbacks.push(cb);\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t\tfor (i = 0; i < callbacks.length; i++) {\n \t\t\t\t\t\tcb = callbacks[i];\n \t\t\t\t\t\ttry {\n \t\t\t\t\t\t\tcb(moduleOutdatedDependencies);\n \t\t\t\t\t\t} catch (err) {\n \t\t\t\t\t\t\tif (options.onErrored) {\n \t\t\t\t\t\t\t\toptions.onErrored({\n \t\t\t\t\t\t\t\t\ttype: \"accept-errored\",\n \t\t\t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\t\t\tdependencyId: moduleOutdatedDependencies[i],\n \t\t\t\t\t\t\t\t\terror: err\n \t\t\t\t\t\t\t\t});\n \t\t\t\t\t\t\t}\n \t\t\t\t\t\t\tif (!options.ignoreErrored) {\n \t\t\t\t\t\t\t\tif (!error) error = err;\n \t\t\t\t\t\t\t}\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// Load self accepted modules\n \t\tfor (i = 0; i < outdatedSelfAcceptedModules.length; i++) {\n \t\t\tvar item = outdatedSelfAcceptedModules[i];\n \t\t\tmoduleId = item.module;\n \t\t\thotCurrentParents = [moduleId];\n \t\t\ttry {\n \t\t\t\t__webpack_require__(moduleId);\n \t\t\t} catch (err) {\n \t\t\t\tif (typeof item.errorHandler === \"function\") {\n \t\t\t\t\ttry {\n \t\t\t\t\t\titem.errorHandler(err);\n \t\t\t\t\t} catch (err2) {\n \t\t\t\t\t\tif (options.onErrored) {\n \t\t\t\t\t\t\toptions.onErrored({\n \t\t\t\t\t\t\t\ttype: \"self-accept-error-handler-errored\",\n \t\t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\t\terror: err2,\n \t\t\t\t\t\t\t\toriginalError: err\n \t\t\t\t\t\t\t});\n \t\t\t\t\t\t}\n \t\t\t\t\t\tif (!options.ignoreErrored) {\n \t\t\t\t\t\t\tif (!error) error = err2;\n \t\t\t\t\t\t}\n \t\t\t\t\t\tif (!error) error = err;\n \t\t\t\t\t}\n \t\t\t\t} else {\n \t\t\t\t\tif (options.onErrored) {\n \t\t\t\t\t\toptions.onErrored({\n \t\t\t\t\t\t\ttype: \"self-accept-errored\",\n \t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\terror: err\n \t\t\t\t\t\t});\n \t\t\t\t\t}\n \t\t\t\t\tif (!options.ignoreErrored) {\n \t\t\t\t\t\tif (!error) error = err;\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// handle errors in accept handlers and self accepted module load\n \t\tif (error) {\n \t\t\thotSetStatus(\"fail\");\n \t\t\treturn Promise.reject(error);\n \t\t}\n\n \t\thotSetStatus(\"idle\");\n \t\treturn new Promise(function(resolve) {\n \t\t\tresolve(outdatedModules);\n \t\t});\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {},\n \t\t\thot: hotCreateModule(moduleId),\n \t\t\tparents: (hotCurrentParentsTemp = hotCurrentParents, hotCurrentParents = [], hotCurrentParentsTemp),\n \t\t\tchildren: []\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, hotCreateRequire(moduleId));\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/rest-your-mind/\";\n\n \t// __webpack_hash__\n \t__webpack_require__.h = function() { return hotCurrentHash; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","module.exports = __webpack_public_path__ + \"assets/particle2.png\";","module.exports = __webpack_public_path__ + \"assets/particleS2.png\";","module.exports = __webpack_public_path__ + \"assets/perlin-512.png\";","module.exports = __webpack_public_path__ + \"assets/sounds/amazingu.wav\";","module.exports = __webpack_public_path__ + \"assets/sounds/bgm.wav\";","module.exports = __webpack_public_path__ + \"assets/sounds/munyu_basic.wav\";","import * as THREE from 'three';\n\nexport default function Block() {\n    let intensity = 1.5;\n    const pointLight = new THREE.PointLight(0xfbffe0, intensity);\n    let time;\n    // pointLight.shadow.bias = -0.5;\n\n    const geo = new THREE.SphereGeometry(50, 30, 30);\n    const mat = new THREE.MeshBasicMaterial({\n        color: 0xfbffe0,\n        transparent: true,\n        blending: THREE.AdditiveBlending,\n        side: THREE.DoubleSide,\n        opacity: 0.7\n    });\n\n    const shaderMat = new THREE.ShaderMaterial({\n        uniforms: {\n            rimColor: { type: \"c\", value: new THREE.Color(0xfbffe0) }\n        },\n        vertexShader: require('../shaders/glow.vert'),\n        fragmentShader: require('../shaders/glow.frag'),\n        transparent: true,\n        blending: THREE.AdditiveBlending,\n        depthWrite: false\n    });\n\n    mat.color.multiplyScalar(intensity);\n    const sphere = new THREE.Mesh(geo, shaderMat);\n    pointLight.add(sphere);\n\n    const texture = new THREE.CanvasTexture(generateTexture());\n    texture.magFilter = THREE.NearestFilter;\n    texture.wrapT = THREE.RepeatWrapping;\n    texture.wrapS = THREE.RepeatWrapping;\n    texture.repeat.set(1, 5);\n\n    const outerSphereGeo = new THREE.SphereGeometry(100, 30, 30);\n    this.outerSphereMat = new THREE.ShaderMaterial({\n        uniforms: {\n            color: { type: \"c\", value: new THREE.Color(0x66ccbb) },\n            height: { type: \"f\", value: 0.5 },\n            time: { type: \"f\", value: 0.0 },\n        },\n        vertexShader: require('../shaders/shell.vert'),\n        fragmentShader: require('../shaders/shell.frag'),\n        // side: THREE.DoubleSide,\n        // transparent: true,\n        // opacity: 0.5,\n        // blending: THREE.MultiplyBlending,\n        // depthWrite: false,\n        // wireframe: true,\n    });\n\n    const outerSphere = new THREE.Mesh(outerSphereGeo, this.outerSphereMat);\n\n    outerSphere.castShadow = true;\n    outerSphere.receiveShadow = true;\n    pointLight.add(outerSphere);\n\n    function generateTexture() {\n        var canvas = document.createElement('canvas');\n        canvas.width = 128;\n        canvas.height = 128;\n        var context = canvas.getContext('2d');\n        context.fillStyle = 'white';\n        context.fillRect(0, 100, 128, 28);\n        return canvas;\n    }\n\n    // particles\n    const particleMat = new THREE.PointsMaterial({\n        color: 0xffffff,\n        size: 5,\n        transparent: true,\n        blending: THREE.AdditiveBlending,\n        map: generateParticles(),\n        depthWrite: false\n    });\n\n    const cloud = new THREE.Points(outerSphereGeo, particleMat);\n    // pointLight.add(cloud);\n\n    function generateParticles() {\n        var canvas = document.createElement('canvas');\n        canvas.width = 16;\n        canvas.height = 16;\n\n        var context = canvas.getContext('2d');\n        var gradient = context.createRadialGradient(canvas.width / 2, canvas.height / 2, 0, canvas.width / 2, canvas.height / 2, canvas.width / 2);\n        gradient.addColorStop(0, 'rgba(255,255,255,1)');\n        gradient.addColorStop(0.2, 'rgba(0,255,255,1)');\n        gradient.addColorStop(0.4, 'rgba(0,0,64,1)');\n        gradient.addColorStop(1, 'rgba(0,0,0,1)');\n        context.fillStyle = gradient;\n        context.fillRect(0, 0, canvas.width, canvas.height);\n\n        var texture = new THREE.Texture(canvas);\n        texture.needsUpdate = true;\n        return texture;\n    }\n\n    this.getBlock = function () {\n        return pointLight;\n    }\n\n    this.update = function () {\n        time = Date.now() / 1000 % 120000;\n        this.outerSphereMat.uniforms.time.value = time;\n    }\n}","import * as THREE from 'three';\n\nexport default function Concern() {\n    let time;\n    const concernObj = new THREE.Object3D();\n\n    const softConcernGeo = new THREE.SphereGeometry(95, 50, 50);\n    this.softConcernMat = new THREE.ShaderMaterial({\n        uniforms: {\n            color: { type: \"c\", value: new THREE.Color(0xfbffe0) },\n            rimColor: { type: \"c\", value: new THREE.Color(0x555a63) },\n            scale: { type: \"f\", value: 10 },\n            freq: { type: \"f\", value: 1.5 },\n            time: { type: \"f\", value: 0.0 },\n            rimPower: { type: \"f\", value: 3 }\n        },\n        vertexShader: require('../shaders/clouds.vert'),\n        fragmentShader: require('../shaders/clouds.frag'),\n        transparent: true,\n        // blending: THREE.MultiplyBlending,\n        blending: THREE.AdditiveBlending,\n        depthWrite: false\n    });\n\n    const softConcernMesh = new THREE.Mesh(softConcernGeo, this.softConcernMat);\n    // concernObj.add(softConcernMesh);\n\n    // angled one\n    const angledConcernGeo = new THREE.SphereGeometry(85, 30, 20);\n    this.angledConcernMat = new THREE.ShaderMaterial({\n        uniforms: {\n            color: { type: \"c\", value: new THREE.Color(0xfbffe0) },\n            rimColor: { type: \"c\", value: new THREE.Color(0x555a63) },\n            scale: { type: \"f\", value: 10 },\n            freq: { type: \"f\", value: 10 },\n            time: { type: \"f\", value: 0.0 },\n            rimPower: { type: \"f\", value: 2 }\n        },\n        vertexShader: require('../shaders/clouds.vert'),\n        fragmentShader: require('../shaders/clouds.frag'),\n        transparent: true,\n        blending: THREE.AdditiveBlending,\n        depthWrite: false\n    });\n\n    const angledConcernMesh = new THREE.Mesh(angledConcernGeo, this.angledConcernMat);\n    concernObj.add(angledConcernMesh);\n\n    const concernGeoLayer = new THREE.SphereGeometry(50, 30, 30);\n    this.concernMatLayer = new THREE.ShaderMaterial({\n        uniforms: {\n            color: { type: \"c\", value: new THREE.Color(0x999cff) },\n            rimColor: { type: \"c\", value: new THREE.Color(0xfbffe0) },\n            scale: { type: \"f\", value: 0.0 },\n            time: { type: \"f\", value: 0.0 },\n            rimPower: { type: \"f\", value: 10 }\n        },\n        vertexShader: require('../shaders/clouds.vert'),\n        fragmentShader: require('../shaders/clouds.frag'),\n        transparent: true,\n        blending: THREE.AdditiveBlending,\n        depthWrite: false\n    });\n\n    const concernMeshLayer = new THREE.Mesh(concernGeoLayer, this.concernMatLayer);\n    concernObj.add(concernMeshLayer);\n\n    const concernGeoLayer2 = new THREE.SphereGeometry(110, 80, 80);\n    this.concernMatLayer2 = new THREE.ShaderMaterial({\n        uniforms: {\n            color: { type: \"c\", value: new THREE.Color(0x181c23) },\n            rimColor: { type: \"c\", value: new THREE.Color(0x181c23) },\n            scale: { type: \"f\", value: 0.0 },\n            time: { type: \"f\", value: 0.0 },\n            rimPower: { type: \"f\", value: 0.5 }\n        },\n        vertexShader: require('../shaders/clouds.vert'),\n        fragmentShader: require('../shaders/clouds.frag'),\n        transparent: true,\n        blending: THREE.MultiplyBlending,\n        depthWrite: false\n    });\n\n    // const concernMeshLayer2 = new THREE.Mesh(concernGeoLayer2, this.concernMatLayer2);\n    // concernObj.add(concernMeshLayer2);\n\n    this.getConcern = function () {\n        return concernObj;\n    }\n\n    this.update = function () {\n        time = Date.now() / 1000 % 120000;\n        this.softConcernMat.uniforms.time.value = time;\n        this.angledConcernMat.uniforms.time.value = time;\n        this.concernMatLayer.uniforms.time.value = time;\n        this.concernMatLayer.uniforms.scale.value = time * 0.0001;\n    }\n}","/*\n * GPU Particle System\n * @author flimshaw - Charlie Hoey - http://charliehoey.com\n *\n * A simple to use, general purpose GPU system. Particles are spawn-and-forget with\n * several options available, and do not require monitoring or cleanup after spawning.\n * Because the paths of all particles are completely deterministic once spawned, the scale\n * and direction of time is also variable.\n *\n * Currently uses a static wrapping perlin noise texture for turbulence, and a small png texture for\n * particles, but adding support for a particle texture atlas or changing to a different type of turbulence\n * would be a fairly light day's work.\n *\n * Shader and javascript packing code derrived from several Stack Overflow examples.\n *\n */\n\n// var THREE = THREE || require('three');\nimport * as THREE from 'three';\nTHREE.GPUParticleSystem = function(options) {\n\n\tvar self = this;\n\toptions = options || {};\n\n\t// parse options and use defaults\n\tself.PARTICLE_COUNT = options.maxParticles || 1000000;\n\tself.PARTICLE_CONTAINERS = options.containerCount || 1;\n\n\tself.PARTICLE_NOISE_TEXTURE = options.particleNoiseTex || null;\n\tself.PARTICLE_SPRITE_TEXTURE = options.particleSpriteTex || null;\n\n\tself.PARTICLES_PER_CONTAINER = Math.ceil(self.PARTICLE_COUNT / self.PARTICLE_CONTAINERS);\n\tself.PARTICLE_CURSOR = 0;\n\tself.time = 0;\n\n\n\t// Custom vertex and fragement shader\n\tvar GPUParticleShader = {\n\n\t\tvertexShader: [\n\n\t\t\t'precision highp float;',\n\t\t\t'const vec4 bitSh = vec4(256. * 256. * 256., 256. * 256., 256., 1.);',\n\t\t\t'const vec4 bitMsk = vec4(0.,vec3(1./256.0));',\n\t\t\t'const vec4 bitShifts = vec4(1.) / bitSh;',\n\n\t\t\t'#define FLOAT_MAX\t1.70141184e38',\n\t\t\t'#define FLOAT_MIN\t1.17549435e-38',\n\n\t\t\t'lowp vec4 encode_float(highp float v) {',\n\t\t\t'highp float av = abs(v);',\n\n\t\t\t'//Handle special cases',\n\t\t\t'if(av < FLOAT_MIN) {',\n\t\t\t'return vec4(0.0, 0.0, 0.0, 0.0);',\n\t\t\t'} else if(v > FLOAT_MAX) {',\n\t\t\t'return vec4(127.0, 128.0, 0.0, 0.0) / 255.0;',\n\t\t\t'} else if(v < -FLOAT_MAX) {',\n\t\t\t'return vec4(255.0, 128.0, 0.0, 0.0) / 255.0;',\n\t\t\t'}',\n\n\t\t\t'highp vec4 c = vec4(0,0,0,0);',\n\n\t\t\t'//Compute exponent and mantissa',\n\t\t\t'highp float e = floor(log2(av));',\n\t\t\t'highp float m = av * pow(2.0, -e) - 1.0;',\n\n\t\t\t//Unpack mantissa\n\t\t\t'c[1] = floor(128.0 * m);',\n\t\t\t'm -= c[1] / 128.0;',\n\t\t\t'c[2] = floor(32768.0 * m);',\n\t\t\t'm -= c[2] / 32768.0;',\n\t\t\t'c[3] = floor(8388608.0 * m);',\n\n\t\t\t'//Unpack exponent',\n\t\t\t'highp float ebias = e + 127.0;',\n\t\t\t'c[0] = floor(ebias / 2.0);',\n\t\t\t'ebias -= c[0] * 2.0;',\n\t\t\t'c[1] += floor(ebias) * 128.0;',\n\n\t\t\t'//Unpack sign bit',\n\t\t\t'c[0] += 128.0 * step(0.0, -v);',\n\n\t\t\t'//Scale back to range',\n\t\t\t'return c / 255.0;',\n\t\t\t'}',\n\n\t\t\t'vec4 pack(const in float depth)',\n\t\t\t'{',\n\t\t\t'const vec4 bit_shift = vec4(256.0*256.0*256.0, 256.0*256.0, 256.0, 1.0);',\n\t\t\t'const vec4 bit_mask\t= vec4(0.0, 1.0/256.0, 1.0/256.0, 1.0/256.0);',\n\t\t\t'vec4 res = mod(depth*bit_shift*vec4(255), vec4(256))/vec4(255);',\n\t\t\t'res -= res.xxyz * bit_mask;',\n\t\t\t'return res;',\n\t\t\t'}',\n\n\t\t\t'float unpack(const in vec4 rgba_depth)',\n\t\t\t'{',\n\t\t\t'const vec4 bit_shift = vec4(1.0/(256.0*256.0*256.0), 1.0/(256.0*256.0), 1.0/256.0, 1.0);',\n\t\t\t'float depth = dot(rgba_depth, bit_shift);',\n\t\t\t'return depth;',\n\t\t\t'}',\n\n\t\t\t'uniform float uTime;',\n\t\t\t'uniform float uScale;',\n\t\t\t'uniform sampler2D tNoise;',\n\n\t\t\t'attribute vec4 particlePositionsStartTime;',\n\t\t\t'attribute vec4 particleVelColSizeLife;',\n\t\t\t'attribute vec3 particleVelocity;',\n\t\t\t'attribute float particleTurbulence;',\n\n\t\t\t'varying vec4 vColor;',\n\t\t\t'varying float lifeLeft;',\n\n\t\t\t'void main() {',\n\n\t\t\t'// unpack things from our attributes',\n\t\t\t'vColor = encode_float( particleVelColSizeLife.y );',\n\n\t\t\t'// convert our velocity back into a value we can use',\n\t\t\t//'vec4 velTurb = encode_float( particleVelColSizeLife.x );',\n\t\t\t'vec3 velocity = particleVelocity;',\n\t\t\t'float turbulence = particleTurbulence;',\n\n\t\t\t'vec3 newPosition;',\n\n\t\t\t'float timeElapsed = uTime - particlePositionsStartTime.a;',\n\n\t\t\t'lifeLeft = 1. - (timeElapsed / particleVelColSizeLife.w);',\n\n\t\t\t'gl_PointSize = ( uScale * particleVelColSizeLife.z ) * lifeLeft;',\n\n\t\t\t// 'velocity.x = ( velocity.x - .5 ) * 3.;',\n\t\t\t// 'velocity.y = ( velocity.y - .5 ) * 3.;',\n\t\t\t// 'velocity.z = ( velocity.z - .5 ) * 3.;',\n\n\t\t\t'newPosition = particlePositionsStartTime.xyz + ( velocity * 10. ) * ( uTime - particlePositionsStartTime.a );',\n\n\t\t\t'vec3 noise = texture2D( tNoise, vec2( newPosition.x * .015 + (uTime * .05), newPosition.y * .02 + (uTime * .015) )).rgb;',\n\t\t\t'vec3 noiseVel = ( noise.rgb - .5 ) * 30.;',\n\n\t\t\t'newPosition = mix(newPosition, newPosition + vec3(noiseVel * ( turbulence * 5. ) ), (timeElapsed / particleVelColSizeLife.a) );',\n\n\t\t\t'if( velocity.y > 0. && velocity.y < .05 ) {',\n\t\t\t'lifeLeft = 0.;',\n\t\t\t'}',\n\n\t\t\t'if( velocity.x < -1.45 ) {',\n\t\t\t'lifeLeft = 0.;',\n\t\t\t'}',\n\n\t\t\t'if( timeElapsed > 0. ) {',\n\t\t\t'gl_Position = projectionMatrix * modelViewMatrix * vec4( newPosition, 1.0 );',\n\t\t\t'} else {',\n\t\t\t'gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\n\t\t\t'lifeLeft = 0.;',\n\t\t\t'gl_PointSize = 0.;',\n\t\t\t'}',\n\t\t\t'}'\n\n\t\t].join(\"\\n\"),\n\n\t\tfragmentShader: [\n\n\t\t\t'float scaleLinear(float value, vec2 valueDomain) {',\n\t\t\t'return (value - valueDomain.x) / (valueDomain.y - valueDomain.x);',\n\t\t\t'}',\n\n\t\t\t'float scaleLinear(float value, vec2 valueDomain, vec2 valueRange) {',\n\t\t\t'return mix(valueRange.x, valueRange.y, scaleLinear(value, valueDomain));',\n\t\t\t'}',\n\n\t\t\t'varying vec4 vColor;',\n\t\t\t'varying float lifeLeft;',\n\n\t\t\t'uniform sampler2D tSprite;',\n\n\t\t\t'void main() {',\n\n\t\t\t'float alpha = 0.;',\n\n\t\t\t'if( lifeLeft > .995 ) {',\n\t\t\t'alpha = scaleLinear( lifeLeft, vec2(1., .995), vec2(0., 1.));//mix( 0., 1., ( lifeLeft - .95 ) * 100. ) * .75;',\n\t\t\t'} else {',\n\t\t\t'alpha = lifeLeft * .75;',\n\t\t\t'}',\n\n\t\t\t'vec4 tex = texture2D( tSprite, gl_PointCoord );',\n\n\t\t\t'gl_FragColor = vec4( vColor.rgb * tex.a, alpha * tex.a );',\n\t\t\t// 'gl_FragColor = vec4( 1.0 );',\n\t\t\t'}'\n\n\t\t].join(\"\\n\")\n\n\t};\n\n\t// preload a million random numbers for speed\n\tself.rand = [];\n\n\tfor (var i = 1e5; i > 0; i--) {\n\t\tself.rand.push(Math.random() - 0.5);\n\t}\n\n\tself.random = function() {\n\t\treturn ++i >= self.rand.length ? self.rand[i = 1] : self.rand[i];\n\t};\n\n\tvar textureLoader = new THREE.TextureLoader();\n\tvar perlinNoise = require(\"../assets/perlin-512.png\");\n\tvar particleImg = require(\"../assets/particle2.png\");\n\tvar particleImg2 = require(\"../assets/particleS2.png\");\n\n\t// perlin texture used to drive turbulence\n\tself.particleNoiseTex = self.PARTICLE_NOISE_TEXTURE || textureLoader.load(perlinNoise);\n\tself.particleNoiseTex.wrapS = self.particleNoiseTex.wrapT = THREE.RepeatWrapping;\n\n\t// sprite texture rendered for each particle\n\tself.particleSpriteTex = self.PARTICLE_SPRITE_TEXTURE || textureLoader.load(particleImg);\n\tself.particleSpriteTex.wrapS = self.particleSpriteTex.wrapT = THREE.RepeatWrapping;\n\n\t// particle system shader material definition\n\tself.particleShaderMat = new THREE.ShaderMaterial({\n\t\ttransparent: true,\n\t\tdepthWrite: false,\n\t\tuniforms: {\n\t\t\t\"uTime\": {\n\t\t\t\tvalue: 0.0\n\t\t\t},\n\t\t\t\"uScale\": {\n\t\t\t\tvalue: 1.0\n\t\t\t},\n\t\t\t\"tNoise\": {\n\t\t\t\tvalue: self.particleNoiseTex\n\t\t\t},\n\t\t\t\"tSprite\": {\n\t\t\t\tvalue: self.particleSpriteTex\n\t\t\t}\n\t\t},\n\t\tblending: THREE.AdditiveBlending,\n\t\tvertexShader: GPUParticleShader.vertexShader,\n\t\tfragmentShader: GPUParticleShader.fragmentShader\n\t});\n\n\t// define defaults for all values\n\tself.particleShaderMat.defaultAttributeValues.particlePositionsStartTime = [0, 0, 0, 0];\n\tself.particleShaderMat.defaultAttributeValues.particleVelColSizeLife = [0, 0, 0, 0];\n\n\tself.particleContainers = [];\n\n\n\t// extend Object3D\n\tTHREE.Object3D.apply(this, arguments);\n\n\tthis.init = function() {\n\n\t\tfor (var i = 0; i < self.PARTICLE_CONTAINERS; i++) {\n\n\t\t\tvar c = new THREE.GPUParticleContainer(self.PARTICLES_PER_CONTAINER, self);\n\t\t\tself.particleContainers.push(c);\n\t\t\tself.add(c);\n\n\t\t}\n\n\t};\n\n\tthis.spawnParticle = function(options) {\n\n\t\tself.PARTICLE_CURSOR++;\n\t\tif (self.PARTICLE_CURSOR >= self.PARTICLE_COUNT) {\n\t\t\tself.PARTICLE_CURSOR = 1;\n\t\t}\n\n\t\tvar currentContainer = self.particleContainers[Math.floor(self.PARTICLE_CURSOR / self.PARTICLES_PER_CONTAINER)];\n\n\t\tcurrentContainer.spawnParticle(options);\n\n\t};\n\n\tthis.update = function(time) {\n\t\tfor (var i = 0; i < self.PARTICLE_CONTAINERS; i++) {\n\n\t\t\tself.particleContainers[i].update(time);\n\n\t\t}\n\t};\n\n\tthis.init();\n\n};\n\nTHREE.GPUParticleSystem.prototype = Object.create(THREE.Object3D.prototype);\nTHREE.GPUParticleSystem.prototype.constructor = THREE.GPUParticleSystem;\n\n\n// Subclass for particle containers, allows for very large arrays to be spread out\nTHREE.GPUParticleContainer = function(maxParticles, particleSystem) {\n\n\tvar self = this;\n\tself.PARTICLE_COUNT = maxParticles || 100000;\n\tself.PARTICLE_CURSOR = 0;\n\tself.time = 0;\n\tself.DPR = window.devicePixelRatio;\n\tself.GPUParticleSystem = particleSystem;\n\n\tvar particlesPerArray = Math.floor(self.PARTICLE_COUNT / self.MAX_ATTRIBUTES);\n\n\t// extend Object3D\n\tTHREE.Object3D.apply(this, arguments);\n\n\t// construct a couple small arrays used for packing variables into floats etc\n\tvar UINT8_VIEW = new Uint8Array(4);\n\tvar FLOAT_VIEW = new Float32Array(UINT8_VIEW.buffer);\n\n\t// UTILITY FUNCTIONS\n\n\t// decodes 4 8-bit values into a single 32 bit float value\n\tfunction decodeFloat(x, y, z, w) {\n\t\tUINT8_VIEW[0] = Math.floor(w);\n\t\tUINT8_VIEW[1] = Math.floor(z);\n\t\tUINT8_VIEW[2] = Math.floor(y);\n\t\tUINT8_VIEW[3] = Math.floor(x);\n\t\treturn FLOAT_VIEW[0]\n\t}\n\n\tfunction componentToHex(c) {\n\t\tvar hex = c.toString(16);\n\t\treturn hex.length == 1 ? \"0\" + hex : hex;\n\t}\n\n\tfunction rgbToHex(r, g, b) {\n\t\treturn \"#\" + componentToHex(r) + componentToHex(g) + componentToHex(b);\n\t}\n\n\tfunction hexToRgb(hex) {\n\t\tvar r = hex >> 16;\n\t\tvar g = (hex & 0x00FF00) >> 8;\n\t\tvar b = hex & 0x0000FF;\n\n\t\tif (r > 0) r--;\n\t\tif (g > 0) g--;\n\t\tif (b > 0) b--;\n\n\t\treturn [r, g, b];\n\t}\n\n\tself.particles = [];\n\tself.deadParticles = [];\n\tself.particlesAvailableSlot = [];\n\n\t// create a container for particles\n\tself.particleUpdate = false;\n\n\t// Geometry to hold particle system vertices\n\tself.particleShaderGeo = new THREE.BufferGeometry();\n\n\t// new hyper compressed attributes\n\tself.particleVertices = new Float32Array(self.PARTICLE_COUNT * 3); // 3D position\n\tself.particlePositionsStartTime = new Float32Array(self.PARTICLE_COUNT * 4); // start position + startTime\n\tself.particleVelocity = new Float32Array(self.PARTICLE_COUNT * 3); // particle velocity\n\tself.particleTurbulence = new Float32Array(self.PARTICLE_COUNT); // particle turbulence\n\tself.particleVelColSizeLife = new Float32Array(self.PARTICLE_COUNT * 4); // particle velocity, color, size and lifetime packed into\n\n\tfor (var i = 0; i < self.PARTICLE_COUNT; i++) {\n\t\tself.particlePositionsStartTime[i * 4 + 0] = 100; //x\n\t\tself.particlePositionsStartTime[i * 4 + 1] = 0; //y\n\t\tself.particlePositionsStartTime[i * 4 + 2] = 0.0; //z\n\t\tself.particlePositionsStartTime[i * 4 + 3] = 0.0; //startTime\n\n\t\tself.particleVertices[i * 3 + 0] = 0; //x\n\t\tself.particleVertices[i * 3 + 1] = 0; //y\n\t\tself.particleVertices[i * 3 + 2] = 0.0; //z\n\n\t\tself.particleVelColSizeLife[i * 4 + 0] = decodeFloat(128, 128, 0, 0); //vel\n\t\tself.particleVelColSizeLife[i * 4 + 1] = decodeFloat(0, 254, 0, 254); //color\n\t\tself.particleVelColSizeLife[i * 4 + 2] = 1.0; //size\n\t\tself.particleVelColSizeLife[i * 4 + 3] = 0.0; //lifespan\n\t}\n\n\tself.particleShaderGeo.addAttribute('position', new THREE.BufferAttribute(self.particleVertices, 3));\n\tself.particleShaderGeo.addAttribute('particlePositionsStartTime', new THREE.BufferAttribute(self.particlePositionsStartTime, 4).setDynamic(true));\n\tself.particleShaderGeo.addAttribute('particleVelColSizeLife', new THREE.BufferAttribute(self.particleVelColSizeLife, 4).setDynamic(true));\n\tself.particleShaderGeo.addAttribute('particleVelocity', new THREE.BufferAttribute(self.particleVelocity, 3).setDynamic(true));\n\tself.particleShaderGeo.addAttribute('particleTurbulence', new THREE.BufferAttribute(self.particleTurbulence, 1).setDynamic(true));\n\n\tself.posStart = self.particleShaderGeo.getAttribute('particlePositionsStartTime');\n\tself.velCol = self.particleShaderGeo.getAttribute('particleVelColSizeLife');\n\tself.velocityAttr = self.particleShaderGeo.getAttribute('particleVelocity');\n\tself.turbulenceAttr = self.particleShaderGeo.getAttribute('particleTurbulence');\n\n\tself.particleShaderMat = self.GPUParticleSystem.particleShaderMat;\n\n\tthis.init = function() {\n\t\tself.particleSystem = new THREE.Points(self.particleShaderGeo, self.particleShaderMat);\n\t\tself.particleSystem.frustumCulled = false;\n\t\tthis.add(self.particleSystem);\n\t};\n\n\tvar options = {},\n\t\tposition = new THREE.Vector3(),\n\t\tvelocity = new THREE.Vector3(),\n\t\tpositionRandomness = 0.,\n\t\tvelocityRandomness = 0.,\n\t\tcolor = 0xffffff,\n\t\tcolorRandomness = 0.,\n\t\tturbulence = 0.5,\n\t\tlifetime = 0.,\n\t\tsize = 0.,\n\t\tsizeRandomness = 0.,\n\t\tsmoothPosition = false,\n\t\ti;\n\n\tvar maxVel = 2;\n\tvar maxSource = 250;\n\tthis.offset = 0;\n\tthis.count = 0;\n\n\tthis.spawnParticle = function(options) {\n\n\t\toptions = options || {};\n\n\t\t// setup reasonable default values for all arguments\n\t\tposition = options.position !== undefined ? position.copy(options.position) : position.set(0., 0., 0.);\n\t\tvelocity = options.velocity !== undefined ? velocity.copy(options.velocity) : velocity.set(0., 0., 0.);\n\t\tpositionRandomness = options.positionRandomness !== undefined ? options.positionRandomness : 0.0;\n\t\tvelocityRandomness = options.velocityRandomness !== undefined ? options.velocityRandomness : 0.0;\n\t\tcolor = options.color !== undefined ? options.color : 0xffffff;\n\t\tcolorRandomness = options.colorRandomness !== undefined ? options.colorRandomness : 1.0;\n\t\tturbulence = options.turbulence !== undefined ? options.turbulence : 1.0;\n\t\tlifetime = options.lifetime !== undefined ? options.lifetime : 5.0;\n\t\tsize = options.size !== undefined ? options.size : 10;\n\t\tsizeRandomness = options.sizeRandomness !== undefined ? options.sizeRandomness : 0.0;\n\t\tsmoothPosition = options.smoothPosition !== undefined ? options.smoothPosition : false;\n\n\t\tif (self.DPR !== undefined) size *= self.DPR;\n\n\t\ti = self.PARTICLE_CURSOR;\n\n\t\tself.posStart.array[i * 4 + 0] = position.x + ((particleSystem.random()) * positionRandomness); // - ( velocity.x * particleSystem.random() ); //x\n\t\tself.posStart.array[i * 4 + 1] = position.y + ((particleSystem.random()) * positionRandomness); // - ( velocity.y * particleSystem.random() ); //y\n\t\tself.posStart.array[i * 4 + 2] = position.z + ((particleSystem.random()) * positionRandomness); // - ( velocity.z * particleSystem.random() ); //z\n\t\tself.posStart.array[i * 4 + 3] = self.time + (particleSystem.random() * 2e-2); //startTime\n\n\t\tif (smoothPosition === true) {\n\t\t\tself.posStart.array[i * 4 + 0] += -(velocity.x * particleSystem.random()); //x\n\t\t\tself.posStart.array[i * 4 + 1] += -(velocity.y * particleSystem.random()); //y\n\t\t\tself.posStart.array[i * 4 + 2] += -(velocity.z * particleSystem.random()); //z\n\t\t}\n\n\t\tvar velX = velocity.x + (particleSystem.random()) * velocityRandomness;\n\t\tvar velY = velocity.y + (particleSystem.random()) * velocityRandomness;\n\t\tvar velZ = velocity.z + (particleSystem.random()) * velocityRandomness;\n\n\t\t// convert turbulence rating to something we can pack into a vec4\n\t\t// var turbulence = Math.floor(turbulence * 254);\n\t\t//\n\t\t// // clamp our value to between 0. and 1.\n\t\t// velX = Math.floor(maxSource * ((velX - -maxVel) / (maxVel - -maxVel)));\n\t\t// velY = Math.floor(maxSource * ((velY - -maxVel) / (maxVel - -maxVel)));\n\t\t// velZ = Math.floor(maxSource * ((velZ - -maxVel) / (maxVel - -maxVel)));\n\t\t//\n\t\t// self.velCol.array[i * 4 + 0] = decodeFloat(velX, velY, velZ, turbulence); //vel\n\t\tself.turbulenceAttr.array[i] = turbulence;\n\t\tself.velocityAttr.array[i * 3 + 0] = velX;\n\t\tself.velocityAttr.array[i * 3 + 1] = velY;\n\t\tself.velocityAttr.array[i * 3 + 2] = velZ;\n\n\t\tvar rgb = hexToRgb(color);\n\n\t\tfor (var c = 0; c < rgb.length; c++) {\n\t\t\trgb[c] = Math.floor(rgb[c] + ((particleSystem.random()) * colorRandomness) * 254);\n\t\t\tif (rgb[c] > 254) rgb[c] = 254;\n\t\t\tif (rgb[c] < 0) rgb[c] = 0;\n\t\t}\n\n\t\tself.velCol.array[i * 4 + 1] = decodeFloat(rgb[0], rgb[1], rgb[2], 254); //color\n\t\tself.velCol.array[i * 4 + 2] = size + (particleSystem.random()) * sizeRandomness; //size\n\t\tself.velCol.array[i * 4 + 3] = lifetime; //lifespan\n\n\t\tif (this.offset == 0) {\n\t\t\tthis.offset = self.PARTICLE_CURSOR;\n\t\t}\n\n\t\tself.count++;\n\n\t\tself.PARTICLE_CURSOR++;\n\n\t\tif (self.PARTICLE_CURSOR >= self.PARTICLE_COUNT) {\n\t\t\tself.PARTICLE_CURSOR = 0;\n\t\t}\n\n\t\tself.particleUpdate = true;\n\n\t};\n\n\tthis.update = function(time) {\n\n\t\tself.time = time;\n\t\tself.particleShaderMat.uniforms['uTime'].value = time;\n\n\t\tthis.geometryUpdate();\n\n\t};\n\n\tthis.geometryUpdate = function() {\n\t\tif (self.particleUpdate == true) {\n\t\t\tself.particleUpdate = false;\n\n\t\t\t// if we can get away with a partial buffer update, do so\n\t\t\tif (self.offset + self.count < self.PARTICLE_COUNT) {\n\t\t\t\tself.posStart.updateRange.offset = self.velCol.updateRange.offset = self.offset * 4;\n\t\t\t\tself.posStart.updateRange.count = self.velCol.updateRange.count = self.count * 4;\n\t\t\t} else {\n\t\t\t\tself.posStart.updateRange.offset = 0;\n\t\t\t\tself.posStart.updateRange.count = self.velCol.updateRange.count = (self.PARTICLE_COUNT * 4);\n\t\t\t}\n\n\t\t\tself.posStart.needsUpdate = true;\n\t\t\tself.velCol.needsUpdate = true;\n\t\t\tself.velocityAttr.needsUpdate = true;\n\t\t\tself.turbulenceAttr.needsUpdate = true;\n\n\t\t\tself.offset = 0;\n\t\t\tself.count = 0;\n\t\t}\n\t};\n\n\tthis.init();\n\n};\n\nTHREE.GPUParticleContainer.prototype = Object.create(THREE.Object3D.prototype);\nTHREE.GPUParticleContainer.prototype.constructor = THREE.GPUParticleContainer;\n\nmodule.exports = THREE.GPUParticleSystem;\n","import * as THREE from 'three';\nimport munyuSound from '../assets/sounds/munyu_basic.wav';\nimport amazinguSound from '../assets/sounds/amazingu.wav';\nimport fragShader from '../shaders/glow.frag';\nimport vertexShader from '../shaders/glow.vert';\n\nexport default function Munyu() {\n\n    const faceObj = new THREE.Object3D();\n    const heightSegment = 20;\n    let cameraPos = new THREE.Vector3(0, 200, 500);\n\n    const eyeGeo = new THREE.SphereGeometry(0.7, 10, 10);\n    const eyeMat = new THREE.MeshBasicMaterial({\n        color: 0x44403c,\n        side: THREE.DoubleSide,\n        flatShading: true\n    });\n\n    const leftEyeMesh = new THREE.Mesh(eyeGeo, eyeMat);\n    const rightEyeMesh = new THREE.Mesh(eyeGeo, eyeMat);\n\n    const mouthPointsArray = [\n        new THREE.Vector3(-1, 0, 0),\n        new THREE.Vector3(0, 0.3, 0.5),\n        new THREE.Vector3(1, 0, 0)];\n\n    const mouthCurve = new THREE.CatmullRomCurve3(mouthPointsArray);\n    const mouthGeo = new THREE.TubeGeometry(mouthCurve, 20, 0.3, 5);\n    const mouthMesh = new THREE.Mesh(mouthGeo, eyeMat);\n\n    leftEyeMesh.position.set(2.5, 0, 3.7);\n    rightEyeMesh.position.set(-2.5, 0, 3.7);\n    mouthMesh.position.set(0, 0, 5);\n    mouthMesh.rotation.z = Math.PI;\n\n    faceObj.add(leftEyeMesh);\n    faceObj.add(rightEyeMesh);\n    faceObj.add(mouthMesh);\n\n    // face\n    const faceGeo = new THREE.SphereGeometry(7, 10, 20);\n    const faceMat = new THREE.MeshBasicMaterial({\n        color: 0xefe9e3,\n        side: THREE.DoubleSide,\n        flatShading: true\n    });\n\n    const faceMesh = new THREE.Mesh(faceGeo, faceMat);\n    faceMesh.position.y = -5;\n\n    const hatGeo = new THREE.SphereGeometry(1.5, 10, 10);\n    const hatMat = new THREE.MeshBasicMaterial({\n        color: 0xfffadd,\n        side: THREE.DoubleSide,\n        flatShading: true,\n        transparent: true,\n        opacity: 0.7\n    });\n\n    const glowingHatMat = new THREE.ShaderMaterial({\n        uniforms: {\n            rimColor: { type: \"c\", value: new THREE.Color(0xfffadd) }\n        },\n        vertexShader: vertexShader,\n        fragmentShader: fragShader,\n        transparent: true,\n        blending: THREE.AdditiveBlending\n    });\n\n    const hat = new THREE.Mesh(hatGeo, glowingHatMat);\n    hat.position.set(0, 8, 0);\n\n    const bodyGeo = new THREE.CylinderGeometry(5, 7, 15, 20, heightSegment);\n    const bodyMat = new THREE.MeshBasicMaterial({\n        color: 0xc36251,\n        skinning: true\n    });\n\n    // munyu body\n    const munyu = new THREE.SkinnedMesh(bodyGeo, bodyMat);\n\n    // bones\n    let bones = [];\n    const root = new THREE.Bone();\n    const spine1 = new THREE.Bone();\n    const spine2 = new THREE.Bone();\n    const spine3 = new THREE.Bone();\n    const spine4 = new THREE.Bone();\n    const spine5 = new THREE.Bone();\n\n    // hierarchy\n    root.add(spine1);\n    spine1.add(spine2);\n    spine2.add(spine3);\n    spine3.add(spine4);\n    spine4.add(spine5);\n\n    // push bones\n    bones.push(root);\n    bones.push(spine1);\n    bones.push(spine2);\n    bones.push(spine3);\n    bones.push(spine4);\n    bones.push(spine5);\n\n    root.position.y = -10;\n    spine1.position.y = 7;\n    spine2.position.y = 5;\n    spine3.position.y = 5;\n    spine4.position.y = 5;\n    spine5.position.y = 3;\n\n    spine5.add(faceMesh);\n    spine5.add(leftEyeMesh);\n    spine5.add(rightEyeMesh);\n    spine5.add(hat);\n    spine5.add(mouthMesh);\n\n    //Create the skin indices and skin weights\n    for (let i = 0; i < bodyGeo.vertices.length; i++) {\n\n        let skinIndex = calculateSkinIndex(30, bones.length, bodyGeo.vertices, i);\n        let skinWeight = calculateSkinWeight(30, bones.length, bodyGeo.vertices, i);\n\n        bodyGeo.skinIndices.push(new THREE.Vector4(skinIndex, skinIndex + 1, 0, 0));\n        bodyGeo.skinWeights.push(new THREE.Vector4(1 - skinWeight, skinWeight, 0, 0));\n    }\n\n    const skeleton = new THREE.Skeleton(bones);\n    munyu.add(root);\n    munyu.position.y = -10;\n\n    // munyu shadow\n    const shadowGeo = new THREE.CircleGeometry(9, 20);\n    const shadowMat = new THREE.MeshBasicMaterial({\n        color: 0x7e9dd3,\n        side: THREE.DoubleSide,\n        blending: THREE.MultiplyBlending\n    });\n    const shadowMesh = new THREE.Mesh(shadowGeo, shadowMat);\n    shadowMesh.rotation.set(Math.PI / 2, 0, 0);\n    shadowMesh.position.set(0, -5, 0);\n    spine1.add(shadowMesh);\n\n    // position before bind\n    munyu.add(root);\n    munyu.bind(skeleton);\n\n    function calculateSkinIndex(height, boneNum, vertice, number) {\n        return Math.floor((vertice[number].y + (height / 2)) / height * (boneNum - 1));\n    }\n\n    function calculateSkinWeight(height, boneNum, vertice, number) {\n        return ((vertice[number].y + (height / 2)) / height * (boneNum - 1))\n            - Math.floor((vertice[number].y + (height / 2)) / height * (boneNum - 1));\n    }\n\n    // animation\n    const statesEnum = {\n        IDLE: \"IDLE\",\n        MOVE: \"MOVE\",\n        AVOID: \"AVOID\",\n        WATCH: \"WATCH\",\n        PRAY: \"PRAY\"\n    };\n    let state = statesEnum.IDLE;\n\n    this.getMunyu = function (x, y, z, color) {\n        munyu.position.set(x, y, z);\n        munyu.material.color = new THREE.Color(color);\n        return munyu;\n    }\n\n    this.setMunyuState = function (state) {\n        return state;\n    }\n\n    this.idle = function (speed) {\n\n        // rotation\n        const time = Date.now() * speed;\n        const angle = Math.sin(time) / 8;\n\n        bones[0].rotation.y = (Math.PI * angle) / 4;\n        bones[1].rotation.z = (Math.PI * angle) / 4;\n        bones[2].rotation.z = (Math.PI * angle) / 2;\n        bones[3].rotation.z = (Math.PI * angle) / 4;\n        bones[4].rotation.z = (Math.PI * angle) / 8;\n        bones[5].rotation.z = (Math.PI * angle) / 8;\n\n        let hatPos = new THREE.Vector3(faceMesh.position.x, faceMesh.position.y + 15, faceMesh.position.z);\n        hat.position.lerp(hatPos, speed);\n        hat.rotation.x = (Math.PI * angle) * 4;\n        hat.rotation.y = (Math.PI * angle) * 4;\n        hat.rotation.z = (Math.PI * angle) * 4;\n    }\n\n    this.move = function (targetPos, speed) {\n        const time = Date.now() * speed;\n        const angle = Math.cos(time) / 8;\n        munyu.position.lerp(targetPos, speed);\n        console.log(\"move\");\n    }\n\n    this.setCameraPos = function (camPos) {\n        cameraPos = camPos;\n    }\n\n    // sound\n    const audioLoader = new THREE.AudioLoader();\n    const listener = new THREE.AudioListener();\n    const munyuAudio = new THREE.Audio(listener);\n    const amazinguAudio = new THREE.Audio(listener);\n\n    function loadSound() {\n        audioLoader.load(munyuSound, (buffer) => {\n            munyuAudio.setBuffer(buffer);\n            munyuAudio.setLoop(false);\n            munyuAudio.setVolume(1);\n        });\n        audioLoader.load(amazinguSound, (buffer) => {\n            amazinguAudio.setBuffer(buffer);\n            amazinguAudio.setLoop(false);\n            amazinguAudio.setVolume(1);\n        });\n    }\n\n    this.getListener = function () {\n        loadSound();\n        return listener;\n    }\n\n    this.playMunyu = function () {\n        if (munyuAudio.isPlaying) munyuAudio.stop();\n        munyuAudio.play();\n    }\n\n    this.playAmazingu = function () {\n        if (amazinguAudio.isPlaying) amazinguAudio.stop();\n        amazinguAudio.play();\n    }\n}","import * as THREE from 'three';\nTHREE.GPUParticleSystem = require('./GPUParticleSystem');\n\nexport default function ParticleGenerator() {\n    let tick = 0;\n    let clock = new THREE.Clock(true);\n    let options, spawnerOptions, particleSystem;\n\n    this.particleSystem = new THREE.GPUParticleSystem({\n        maxParticles: 50000\n    });\n    // particleSystem.init();\n    let position = [];\n\n    options = {\n        position: new THREE.Vector3(),\n        positionRandomness: 0.1,\n        velocity: new THREE.Vector3(),\n        velocityRandomness: 0.15,\n        color: 0xaa88ff,\n        colorRandomness: 0.2,\n        turbulence: 0,\n        lifetime: 3,\n        size: 7,\n        sizeRandomness: 5\n    };\n    spawnerOptions = {\n        spawnRate: 0.1,\n        horizontalSpeed: .5,\n        verticalSpeed: 0,\n        timeScale: 1\n    };\n\n    let colors = [0x11c6fd, 0xffb9f8, 0xa099ff];\n\n    this.update = function () {\n        var delta = clock.getDelta() * spawnerOptions.timeScale;\n        tick += delta;\n\n        if (tick < 0) tick = 0;\n        if (delta > 0) {\n            for (var c in colors) {\n                var p = colors[c];\n                options.color = p;\n                options.position.x = randomIntFromInterval(-1000, 1000);\n                options.position.y = randomIntFromInterval(0, 1000);\n                options.position.z = randomIntFromInterval(-1000, 1000);\n                // options.position.x = Math.sin(tick + (Math.PI * 0.5 * c) * spawnerOptions.horizontalSpeed) * 100;\n                // options.position.y = Math.cos(tick + (Math.PI * 0.5 * c) * spawnerOptions.verticalSpeed) * 100;\n                // options.position.z = Math.sin(tick + (Math.PI * 0.5 * c) * spawnerOptions.horizontalSpeed + spawnerOptions.verticalSpeed) * 0;\n\n                for (var x = 0; x < spawnerOptions.spawnRate * delta; x++) {\n                    this.particleSystem.spawnParticle(options);\n                }\n            }\n        }\n        this.particleSystem.update(tick);\n    }\n\n    function randomIntFromInterval(min, max) // min and max included\n    {\n        return Math.floor(Math.random() * (max - min + 1) + min);\n    }\n}","import * as THREE from 'three';\nimport Block from './Block';\nimport MunyuGenerator from './munyuGenerator';\nimport skybox from './background';\nimport bgm from '../assets/sounds/bgm.wav';\nimport Environment from './environment';\nimport Concern from './Concern';\nconst OrbitControls = require('three-orbit-controls')(THREE);\n// import ParticleEngine from './ParticleEngine';\n// import Particle from './Particle';\nimport ParticleGenerator from './ParticleGenerator';\n\nexport default function Scene(canvas) {\n\n    const clock = new THREE.Clock();\n    let HEIGHT = window.innerHeight;\n    let WIDTH = window.innerWidth;\n\n    // scene subjects\n    const light = createLights();\n    const scene = createScene();\n    const renderer = createRenderer();\n    const camera = createCamera();\n    const controls = createControl();\n    const gradSkybox = skybox();\n    const camHelper = new THREE.CameraHelper(camera);\n    // const particleEngine = new ParticleEngine();\n    const particleGenerator = new ParticleGenerator();\n\n    // audio\n    const listener = new THREE.AudioListener();\n    const audioLoader = new THREE.AudioLoader();\n    const bgmAudio = new THREE.Audio(listener);\n\n    let sceneObjects = [];\n    let camPos = camera.position;\n\n    // add const static base environment\n    const ground = new Environment().getGround();\n    const block = new Block();\n    const block1 = block.getBlock();\n    const concern = new Concern();\n    const concernMesh = concern.getConcern();\n\n    // munyu\n    const munyuGenerator = new MunyuGenerator();\n    const munyus = munyuGenerator.instantiate();\n    const pointVertex = munyuGenerator.getPos();\n    const speed = munyuGenerator.getSpeed();\n    const color = munyuGenerator.getColor();\n    let targetPos = munyuGenerator.targetPos();\n\n    function createScene() {\n        const scene = new THREE.Scene();\n        return scene;\n    }\n\n    function createRenderer() {\n        const renderer = new THREE.WebGLRenderer({ canvas: canvas, alpha: true, antialias: true });\n        renderer.setPixelRatio((window.devicePixelRatio) ? window.devicePixelRatio : 1);\n        renderer.setSize(WIDTH, HEIGHT);\n        renderer.gammaInput = true;\n        renderer.gammaOutput = true;\n        renderer.shadowMap.enabled = true;\n        renderer.shadowMap.type = THREE.BasicShadowMap;\n\n        return renderer;\n    }\n\n    function createCamera() {\n        const aspectRatio = WIDTH / HEIGHT;\n        const fieldOfView = 60;\n        const nearPlane = 1;\n        const farPlane = 10000;\n        const camera = new THREE.PerspectiveCamera(fieldOfView, aspectRatio, nearPlane, farPlane);\n\n        camera.position.set(0, 0, 700);\n        camera.lookAt(new THREE.Vector3(0, 100, 0));\n\n        return camera;\n    }\n\n    function createControl() {\n        const controls = new OrbitControls(camera, renderer.domElement);\n        controls.target = new THREE.Vector3(0, 15, 0);\n        // controls.maxPolarAngle = Math.PI / 2;\n        controls.maxDistance = 1000;\n\n        return controls;\n    }\n\n    function createLights() {\n        const ambientLight = new THREE.AmbientLight(0x333333, 0.5);\n        const directionalLight = new THREE.DirectionalLight(0xfff5d6, 1);\n\n        let lights = [];\n        lights.push(ambientLight);\n        lights.push(directionalLight);\n\n        return lights;\n    }\n\n    function loadSound() {\n        audioLoader.load(bgm, (buffer) => {\n            bgmAudio.setBuffer(buffer);\n            bgmAudio.setLoop(true),\n                bgmAudio.setVolume(0.3);\n            bgmAudio.play();\n        });\n    }\n\n    function addMunyus() {\n        for (let i = 0; i < munyus.length; i++) {\n            scene.add(munyus[i].getMunyu(pointVertex[i].x, pointVertex[i].y, pointVertex[i].z, color[i]));\n        }\n    }\n\n    this.start = function () {\n        console.log(\"start\");\n        scene.add(gradSkybox);\n        scene.add(concernMesh);\n        concernMesh.position.set(0, 100, 0);\n        scene.add(particleGenerator.particleSystem);\n        particleGenerator.particleSystem.position.set(0, 100, 0);\n        addMunyus();\n        // loadSound();\n        // camera.add(Munyu1.getListener());\n        // camera.add(Munyu2.getListener());\n        // scene.add(light[0]);\n        // scene.add(light[1]);\n    }\n\n    this.update = function () {\n        camPos = camera.position;\n\n        // idle\n        for (let i = 0; i < munyus.length; i++) {\n            munyus[i].idle(speed[i]);\n            munyus[i].setCameraPos(camPos);\n        }\n        // munyus[0].move(targetPos[10], 0.01);\n        block.update();\n        concern.update();\n        particleGenerator.update();\n        renderer.render(scene, camera);\n    }\n\n    this.onWindowResize = function () {\n        HEIGHT = window.innerHeight;\n        WIDTH = window.innerWidth;\n\n        canvas.innerWidth = WIDTH;\n        canvas.innerHeight = HEIGHT;\n\n        camera.aspect = WIDTH / HEIGHT;\n        camera.updateProjectionMatrix();\n\n        renderer.setSize(WIDTH, HEIGHT);\n    }\n\n    this.onMouseClick = function () {\n        // Munyu1.playMunyu();\n        // Munyu2.playAmazingu();\n    }\n}","import * as THREE from 'three';\nimport vertShader from '../shaders/gradient.vert';\nimport fragShader from '../shaders/gradient.frag';\n\nexport default function skybox() {\n    const gradObj = new THREE.Object3D();\n    const gradMesh = new THREE.Mesh(\n        new THREE.BoxGeometry(10000, 10000, 10000),\n        new THREE.ShaderMaterial({\n            uniforms: {\n                uColorA: { value: new THREE.Color(0x4b6ba4) },\n                uColorB: { value: new THREE.Color(0x151628) }\n            },\n            vertexShader: vertShader,\n            fragmentShader: fragShader,\n            side: THREE.BackSide\n        })\n    );\n\n    gradObj.add(gradMesh);\n\n    return gradObj;\n}","import * as THREE from 'three';\n\nexport default function Environment() {\n\n    const groundGeo = new THREE.CircleGeometry(1000, 50);\n    const groundMat = new THREE.MeshBasicMaterial({\n        color: 0x5386db,\n        side: THREE.DoubleSide,\n        // blending: THREE.MultiplyBlending,\n        transparent: true,\n        opacity: 0.5\n    });\n    const groundMesh = new THREE.Mesh(groundGeo, groundMat);\n    groundMesh.rotation.set(Math.PI / 2, 0, 0);\n    groundMesh.position.set(0,-7,0);\n    this.getGround = function () {\n        return groundMesh;\n    }\n}","import './../style.scss';\nimport Scene from './Scene';\n\nif (process.env.NODE_ENV !== 'production') { console.log(\"dev mode\"); }\nlet basename = process.env.NODE_ENV == 'production' ? \"/rest-your-mind\" : \"/\";\n\nif (module.hot) {\n    module.hot.accept();\n    module.hot.dispose(() => {\n        const oldRootElem = document.querySelector('body');\n        const newRootElem = oldRootElem.cloneNode(false);\n        oldRootElem.parentNode.insertBefore(newRootElem, oldRootElem);\n        oldRootElem.parentNode.removeChild(oldRootElem);\n    });\n} else {\n    enableProdMode();\n}\n\nconst canvas = document.createElement('canvas');\ncanvas.id = 'canvas';\nconst root = document.getElementById('root');\nroot.appendChild(canvas);\n\nconst scene = new Scene(canvas);\n\nbindEventListeners();\nstart();\nupdate();\n\nfunction bindEventListeners() {\n    window.onresize = resizeCanvas;\n    window.onclick = mouseClick;\n    resizeCanvas();\t\n}\n\nfunction resizeCanvas() {\n\tcanvas.style.width = window.innerWidth;\n\tcanvas.style.height= window.innerHeight;\n    scene.onWindowResize();\n}\n\nfunction mouseClick() {\n    scene.onMouseClick();\n}\n\nfunction start() {\n    scene.start();\n}\n\nfunction update() {\n    requestAnimationFrame(update);\n    scene.update();\n}","import * as THREE from 'three';\nimport Munyu from './Munyu';\n\nexport default function MunyuGenerator() {\n\n    let munyus = [];\n    let pointVertex = [];\n    let speed = [];\n    let munyuColors = [];\n    const munyuNum = 30;\n    // each vertice point// each vertice point\n    const pointGeo = new THREE.Geometry();\n    const colors = [0xc36251, 0xc1c351, 0x51c39e, 0x5058c4, 0xa750c4, 0x80c450];\n\n    createGrid();\n    getRandomPos();\n\n    function createGrid() {\n        // grid for generating random islands\n        const config = {\n            height: 500,\n            width: 500,\n            heightSeg: 50,\n            widthSeg: 50,\n            color: \"black\"\n        };\n\n        // set 0 opacity for production\n        const material = new THREE.LineBasicMaterial({\n            color: config.color\n        });\n\n        // line\n        const gridObject = new THREE.Object3D();\n        const gridGeo = new THREE.Geometry();\n\n        const stepw = 2 * config.width / config.widthSeg;\n        const steph = 2 * config.height / config.heightSeg;\n\n        // line - width\n        for (let i = -config.width; i <= config.width; i += stepw) {\n            gridGeo.vertices.push(new THREE.Vector3(-config.height, i, 0));\n            gridGeo.vertices.push(new THREE.Vector3(config.height, i, 0));\n        }\n\n        // line - height\n        for (let i = -config.height; i <= config.height; i += steph) {\n            gridGeo.vertices.push(new THREE.Vector3(i, -config.width, 0));\n            gridGeo.vertices.push(new THREE.Vector3(i, config.width, 0));\n        }\n\n        // draw grid line\n        const line = new THREE.LineSegments(gridGeo, material);\n        gridObject.add(line);\n        gridObject.rotation.x = Math.PI / 2;\n\n        // point vertices\n        for (let i = -config.width; i <= config.width; i += stepw) {\n            for (let j = -config.height; j <= config.height; j += steph) {\n                pointGeo.vertices.push(new THREE.Vector3(i, -100, j));\n            }\n        }\n    }\n\n    function getRandomPos() {\n        // push random vertices to the array\n        let prevIndex = null;\n        for (let i = 0; i < munyuNum; i++) {\n\n            let index = Math.floor((Math.random() * pointGeo.vertices.length - 1) + 1);\n\n            // prevent overlap\n            while (index === prevIndex) {\n                index = Math.floor((Math.random() * pointGeo.vertices.length - 1) + 1);\n            }\n\n            pointVertex[i] = pointGeo.vertices[index];\n            prevIndex = index;\n        }\n        return pointVertex;\n    }\n\n    this.instantiate = function () {\n        let num = 0;\n\n        for (let i = 0; i < munyuNum; i++) {\n            const munyu = new Munyu();\n            munyus.push(munyu);\n            speed.push((Math.random() * 0.005) + 0.001);\n            if (num >= colors.length -1){\n                num = 0;\n            }\n            munyuColors.push(colors[num]);\n            num ++;\n        }\n        return munyus;\n    }\n\n    this.getPos = function () {\n        return pointVertex;\n    }\n\n    this.targetPos = function () {\n        let randomVertex = getRandomPos();\n        return randomVertex;\n    }\n\n    this.getSpeed = function () {\n        return speed;\n    }\n\n    this.getColor = function () {\n        return munyuColors;\n    }\n}\n","exports = module.exports = require(\"./node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"html {\\n  font-family: 'Source Sans Pro', sans-serif; }\\n\\nbody {\\n  margin: 0; }\\n\\n#root {\\n  position: absolute;\\n  width: 100%;\\n  height: 100%;\\n  overflow: hidden; }\\n\\np {\\n  margin: 1.2em; }\\n\", \"\"]);\n\n// exports\n","module.exports = \"#define GLSLIFY 1\\nuniform vec3 color;\\nuniform vec3 rimColor;\\nuniform float rimPower;\\nvarying vec3 viewPos;\\nvarying vec3 viewNormal;\\nvarying vec3 worldPos;\\nvarying vec3 worldNormal;\\n\\nvoid main() {\\n    float rim = clamp(dot(normalize(viewNormal), normalize(-viewPos)), 0.0, 1.0);\\n    rim = pow(rim, rimPower);\\n    gl_FragColor = vec4(rimColor, rim);\\n}\\n\"","module.exports = \"#define GLSLIFY 1\\nvarying vec3 viewPos;\\nvarying vec3 viewNormal;\\nvarying vec3 worldPos;\\nvarying vec3 worldNormal;\\n\\nuniform float scale;\\nuniform float freq;\\nuniform float time;\\n\\nvec3 mod289(vec3 x) {\\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\\n}\\n\\nvec4 mod289(vec4 x) {\\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\\n}\\n\\nvec4 permute(vec4 x) {\\n     return mod289(((x*34.0)+1.0)*x);\\n}\\n\\nvec4 taylorInvSqrt(vec4 r)\\n{\\n  return 1.79284291400159 - 0.85373472095314 * r;\\n}\\n\\nfloat snoise(vec3 v)\\n  { \\n  const vec2  C = vec2(1.0/6.0, 1.0/3.0) ;\\n  const vec4  D = vec4(0.0, 0.5, 1.0, 2.0);\\n\\n// First corner\\n  vec3 i  = floor(v + dot(v, C.yyy) );\\n  vec3 x0 =   v - i + dot(i, C.xxx) ;\\n\\n// Other corners\\n  vec3 g = step(x0.yzx, x0.xyz);\\n  vec3 l = 1.0 - g;\\n  vec3 i1 = min( g.xyz, l.zxy );\\n  vec3 i2 = max( g.xyz, l.zxy );\\n\\n  //   x0 = x0 - 0.0 + 0.0 * C.xxx;\\n  //   x1 = x0 - i1  + 1.0 * C.xxx;\\n  //   x2 = x0 - i2  + 2.0 * C.xxx;\\n  //   x3 = x0 - 1.0 + 3.0 * C.xxx;\\n  vec3 x1 = x0 - i1 + C.xxx;\\n  vec3 x2 = x0 - i2 + C.yyy; // 2.0*C.x = 1/3 = C.y\\n  vec3 x3 = x0 - D.yyy;      // -1.0+3.0*C.x = -0.5 = -D.y\\n\\n// Permutations\\n  i = mod289(i); \\n  vec4 p = permute( permute( permute( \\n             i.z + vec4(0.0, i1.z, i2.z, 1.0 ))\\n           + i.y + vec4(0.0, i1.y, i2.y, 1.0 )) \\n           + i.x + vec4(0.0, i1.x, i2.x, 1.0 ));\\n\\n// Gradients: 7x7 points over a square, mapped onto an octahedron.\\n// The ring size 17*17 = 289 is close to a multiple of 49 (49*6 = 294)\\n  float n_ = 0.142857142857; // 1.0/7.0\\n  vec3  ns = n_ * D.wyz - D.xzx;\\n\\n  vec4 j = p - 49.0 * floor(p * ns.z * ns.z);  //  mod(p,7*7)\\n\\n  vec4 x_ = floor(j * ns.z);\\n  vec4 y_ = floor(j - 7.0 * x_ );    // mod(j,N)\\n\\n  vec4 x = x_ *ns.x + ns.yyyy;\\n  vec4 y = y_ *ns.x + ns.yyyy;\\n  vec4 h = 1.0 - abs(x) - abs(y);\\n\\n  vec4 b0 = vec4( x.xy, y.xy );\\n  vec4 b1 = vec4( x.zw, y.zw );\\n\\n  //vec4 s0 = vec4(lessThan(b0,0.0))*2.0 - 1.0;\\n  //vec4 s1 = vec4(lessThan(b1,0.0))*2.0 - 1.0;\\n  vec4 s0 = floor(b0)*2.0 + 1.0;\\n  vec4 s1 = floor(b1)*2.0 + 1.0;\\n  vec4 sh = -step(h, vec4(0.0));\\n\\n  vec4 a0 = b0.xzyw + s0.xzyw*sh.xxyy ;\\n  vec4 a1 = b1.xzyw + s1.xzyw*sh.zzww ;\\n\\n  vec3 p0 = vec3(a0.xy,h.x);\\n  vec3 p1 = vec3(a0.zw,h.y);\\n  vec3 p2 = vec3(a1.xy,h.z);\\n  vec3 p3 = vec3(a1.zw,h.w);\\n\\n//Normalise gradients\\n  vec4 norm = taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\\n  p0 *= norm.x;\\n  p1 *= norm.y;\\n  p2 *= norm.z;\\n  p3 *= norm.w;\\n\\n// Mix final noise value\\n  vec4 m = max(0.6 - vec4(dot(x0,x0), dot(x1,x1), dot(x2,x2), dot(x3,x3)), 0.0);\\n  m = m * m;\\n  return 42.0 * dot( m*m, vec4( dot(p0,x0), dot(p1,x1), \\n                                dot(p2,x2), dot(p3,x3) ) );\\n  }\\n\\n\\nvoid main()\\n{\\n    vec3 pos = position;\\n    worldPos = (modelMatrix * vec4(position, 1.0)).xyz;\\n    worldNormal = normalize(mat3(modelMatrix) * normal);\\n    \\n    float moveSpeedX = time * 0.5;\\n    float moveSpeedY = time * 0.3;\\n    float moveSpeedZ = time * 0.2;\\n\\n    float xs = scale * snoise(vec3(worldNormal.xy * freq, moveSpeedX));\\n    float ys = scale * snoise(vec3(worldNormal.yz * freq, moveSpeedY));\\n    float zs = scale * snoise(vec3(worldNormal.xz * freq, moveSpeedZ));\\n\\n    pos.x = pos.x + xs;\\n    pos.y = pos.y + ys;\\n    pos.z = pos.z + zs;\\n    \\n    vec4 viewPosition = modelViewMatrix * vec4( pos, 1.0 );\\n    viewPos = viewPosition.xyz;\\n    vec3 vNormal = normalize(normalMatrix * normal);\\n    viewNormal = vNormal;\\n   \\n    worldNormal = normalize(mat3(modelMatrix) * normal);\\n    gl_Position = projectionMatrix * viewPosition;\\n}\"","module.exports = \"#define GLSLIFY 1\\nuniform vec3 rimColor;\\nvarying vec3 viewPos;\\nvarying vec3 viewNormal;\\n\\nvoid main() {\\n    // gl_FragColor = vec4(normalize(viewNormal) * 0.5 + 0.5, 1.0);\\n    // gl_FragColor = vec4(normalize(viewPos) * 0.5 + 0.5, 1.0);\\n    float rim = clamp(dot(normalize(viewNormal), normalize(-viewPos)), 0.0, 1.0);\\n    rim = pow(rim, 3.0);\\n    // rim = 1.0 - rim;\\n    // vec3 color = mix(mainColor, rimColor, rim);\\n    gl_FragColor = vec4(rimColor, rim);\\n    // gl_FragColor = vec4(glow, 1.0);\\n}\\n\"","module.exports = \"#define GLSLIFY 1\\nvarying vec3 viewPos;\\nvarying vec3 viewNormal;\\n\\nvoid main()\\n{\\n    vec4 viewPosition = modelViewMatrix * vec4( position, 1.0 );\\n    viewPos = viewPosition.xyz;\\n    vec3 vNormal = normalize(normalMatrix * normal);\\n    viewNormal = vNormal;\\n    gl_Position = projectionMatrix * viewPosition;\\n}\"","module.exports = \"#define GLSLIFY 1\\nvarying vec3 localPosition;\\nuniform vec3 uColorA;\\nuniform vec3 uColorB;\\n\\nvoid main() {\\n    gl_FragColor = vec4(\\n        mix(uColorA, uColorB, clamp(normalize(localPosition).y * 0.5 + 0.5, 0., 1.)),\\n        // vec3(fract(normalize(localPosition).y * 0.5 + 0.5)),\\n        1.\\n    );\\n}\"","module.exports = \"#define GLSLIFY 1\\nvarying vec3 localPosition;\\n\\nvoid main() {\\n    localPosition = position;\\n    gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\"","module.exports = \"#define GLSLIFY 1\\nuniform vec3 color;\\nvarying vec3 viewPos;\\nvarying vec3 viewNormal;\\nvarying vec3 worldNormal;\\nvarying vec3 worldPos;\\nvarying vec3 objectPos;\\n\\nuniform float height;\\nuniform float time;\\n\\n\\nvec3 mod289(vec3 x) {\\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\\n}\\n\\nvec4 mod289(vec4 x) {\\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\\n}\\n\\nvec4 permute(vec4 x) {\\n     return mod289(((x*34.0)+1.0)*x);\\n}\\n\\nvec4 taylorInvSqrt(vec4 r)\\n{\\n  return 1.79284291400159 - 0.85373472095314 * r;\\n}\\n\\nfloat snoise(vec3 v)\\n  { \\n  const vec2  C = vec2(1.0/6.0, 1.0/3.0) ;\\n  const vec4  D = vec4(0.0, 0.5, 1.0, 2.0);\\n\\n// First corner\\n  vec3 i  = floor(v + dot(v, C.yyy) );\\n  vec3 x0 =   v - i + dot(i, C.xxx) ;\\n\\n// Other corners\\n  vec3 g = step(x0.yzx, x0.xyz);\\n  vec3 l = 1.0 - g;\\n  vec3 i1 = min( g.xyz, l.zxy );\\n  vec3 i2 = max( g.xyz, l.zxy );\\n\\n  //   x0 = x0 - 0.0 + 0.0 * C.xxx;\\n  //   x1 = x0 - i1  + 1.0 * C.xxx;\\n  //   x2 = x0 - i2  + 2.0 * C.xxx;\\n  //   x3 = x0 - 1.0 + 3.0 * C.xxx;\\n  vec3 x1 = x0 - i1 + C.xxx;\\n  vec3 x2 = x0 - i2 + C.yyy; // 2.0*C.x = 1/3 = C.y\\n  vec3 x3 = x0 - D.yyy;      // -1.0+3.0*C.x = -0.5 = -D.y\\n\\n// Permutations\\n  i = mod289(i); \\n  vec4 p = permute( permute( permute( \\n             i.z + vec4(0.0, i1.z, i2.z, 1.0 ))\\n           + i.y + vec4(0.0, i1.y, i2.y, 1.0 )) \\n           + i.x + vec4(0.0, i1.x, i2.x, 1.0 ));\\n\\n// Gradients: 7x7 points over a square, mapped onto an octahedron.\\n// The ring size 17*17 = 289 is close to a multiple of 49 (49*6 = 294)\\n  float n_ = 0.142857142857; // 1.0/7.0\\n  vec3  ns = n_ * D.wyz - D.xzx;\\n\\n  vec4 j = p - 49.0 * floor(p * ns.z * ns.z);  //  mod(p,7*7)\\n\\n  vec4 x_ = floor(j * ns.z);\\n  vec4 y_ = floor(j - 7.0 * x_ );    // mod(j,N)\\n\\n  vec4 x = x_ *ns.x + ns.yyyy;\\n  vec4 y = y_ *ns.x + ns.yyyy;\\n  vec4 h = 1.0 - abs(x) - abs(y);\\n\\n  vec4 b0 = vec4( x.xy, y.xy );\\n  vec4 b1 = vec4( x.zw, y.zw );\\n\\n  //vec4 s0 = vec4(lessThan(b0,0.0))*2.0 - 1.0;\\n  //vec4 s1 = vec4(lessThan(b1,0.0))*2.0 - 1.0;\\n  vec4 s0 = floor(b0)*2.0 + 1.0;\\n  vec4 s1 = floor(b1)*2.0 + 1.0;\\n  vec4 sh = -step(h, vec4(0.0));\\n\\n  vec4 a0 = b0.xzyw + s0.xzyw*sh.xxyy ;\\n  vec4 a1 = b1.xzyw + s1.xzyw*sh.zzww ;\\n\\n  vec3 p0 = vec3(a0.xy,h.x);\\n  vec3 p1 = vec3(a0.zw,h.y);\\n  vec3 p2 = vec3(a1.xy,h.z);\\n  vec3 p3 = vec3(a1.zw,h.w);\\n\\n//Normalise gradients\\n  vec4 norm = taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\\n  p0 *= norm.x;\\n  p1 *= norm.y;\\n  p2 *= norm.z;\\n  p3 *= norm.w;\\n\\n// Mix final noise value\\n  vec4 m = max(0.6 - vec4(dot(x0,x0), dot(x1,x1), dot(x2,x2), dot(x3,x3)), 0.0);\\n  m = m * m;\\n  return 42.0 * dot( m*m, vec4( dot(p0,x0), dot(p1,x1), \\n                                dot(p2,x2), dot(p3,x3) ) );\\n  }\\n\\nvoid main() {\\n    float light = clamp(dot(normalize(vec3(0.0, 2.0, 0.0)), worldNormal), 0.0, 1.0);\\n    vec3 ambient = vec3(0.1, 0.0, 0.1);\\n    gl_FragColor = vec4(color * light + ambient * 0.1, 0.9);\\n    // gl_FragColor = vec4(color * light, 1.0);\\n    // gl_FragColor = vec4(glow, 1.0);\\n}\\n\"","module.exports = \"#define GLSLIFY 1\\nvarying vec3 viewPos;\\nvarying vec3 viewNormal;\\nvarying vec3 worldNormal;\\nvarying vec3 worldPos;\\nvarying vec3 objectPos;\\n\\nuniform float height;\\nuniform float time;\\n\\nvec3 mod289(vec3 x) {\\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\\n}\\n\\nvec4 mod289(vec4 x) {\\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\\n}\\n\\nvec4 permute(vec4 x) {\\n     return mod289(((x*34.0)+1.0)*x);\\n}\\n\\nvec4 taylorInvSqrt(vec4 r)\\n{\\n  return 1.79284291400159 - 0.85373472095314 * r;\\n}\\n\\nfloat snoise(vec3 v)\\n  { \\n  const vec2  C = vec2(1.0/6.0, 1.0/3.0) ;\\n  const vec4  D = vec4(0.0, 0.5, 1.0, 2.0);\\n\\n// First corner\\n  vec3 i  = floor(v + dot(v, C.yyy) );\\n  vec3 x0 =   v - i + dot(i, C.xxx) ;\\n\\n// Other corners\\n  vec3 g = step(x0.yzx, x0.xyz);\\n  vec3 l = 1.0 - g;\\n  vec3 i1 = min( g.xyz, l.zxy );\\n  vec3 i2 = max( g.xyz, l.zxy );\\n\\n  //   x0 = x0 - 0.0 + 0.0 * C.xxx;\\n  //   x1 = x0 - i1  + 1.0 * C.xxx;\\n  //   x2 = x0 - i2  + 2.0 * C.xxx;\\n  //   x3 = x0 - 1.0 + 3.0 * C.xxx;\\n  vec3 x1 = x0 - i1 + C.xxx;\\n  vec3 x2 = x0 - i2 + C.yyy; // 2.0*C.x = 1/3 = C.y\\n  vec3 x3 = x0 - D.yyy;      // -1.0+3.0*C.x = -0.5 = -D.y\\n\\n// Permutations\\n  i = mod289(i); \\n  vec4 p = permute( permute( permute( \\n             i.z + vec4(0.0, i1.z, i2.z, 1.0 ))\\n           + i.y + vec4(0.0, i1.y, i2.y, 1.0 )) \\n           + i.x + vec4(0.0, i1.x, i2.x, 1.0 ));\\n\\n// Gradients: 7x7 points over a square, mapped onto an octahedron.\\n// The ring size 17*17 = 289 is close to a multiple of 49 (49*6 = 294)\\n  float n_ = 0.142857142857; // 1.0/7.0\\n  vec3  ns = n_ * D.wyz - D.xzx;\\n\\n  vec4 j = p - 49.0 * floor(p * ns.z * ns.z);  //  mod(p,7*7)\\n\\n  vec4 x_ = floor(j * ns.z);\\n  vec4 y_ = floor(j - 7.0 * x_ );    // mod(j,N)\\n\\n  vec4 x = x_ *ns.x + ns.yyyy;\\n  vec4 y = y_ *ns.x + ns.yyyy;\\n  vec4 h = 1.0 - abs(x) - abs(y);\\n\\n  vec4 b0 = vec4( x.xy, y.xy );\\n  vec4 b1 = vec4( x.zw, y.zw );\\n\\n  //vec4 s0 = vec4(lessThan(b0,0.0))*2.0 - 1.0;\\n  //vec4 s1 = vec4(lessThan(b1,0.0))*2.0 - 1.0;\\n  vec4 s0 = floor(b0)*2.0 + 1.0;\\n  vec4 s1 = floor(b1)*2.0 + 1.0;\\n  vec4 sh = -step(h, vec4(0.0));\\n\\n  vec4 a0 = b0.xzyw + s0.xzyw*sh.xxyy ;\\n  vec4 a1 = b1.xzyw + s1.xzyw*sh.zzww ;\\n\\n  vec3 p0 = vec3(a0.xy,h.x);\\n  vec3 p1 = vec3(a0.zw,h.y);\\n  vec3 p2 = vec3(a1.xy,h.z);\\n  vec3 p3 = vec3(a1.zw,h.w);\\n\\n//Normalise gradients\\n  vec4 norm = taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\\n  p0 *= norm.x;\\n  p1 *= norm.y;\\n  p2 *= norm.z;\\n  p3 *= norm.w;\\n\\n// Mix final noise value\\n  vec4 m = max(0.6 - vec4(dot(x0,x0), dot(x1,x1), dot(x2,x2), dot(x3,x3)), 0.0);\\n  m = m * m;\\n  return 42.0 * dot( m*m, vec4( dot(p0,x0), dot(p1,x1), \\n                                dot(p2,x2), dot(p3,x3) ) );\\n  }\\n\\nvoid main()\\n{\\n    vec3 pos = position;\\n    objectPos = position;\\n    float h = height + 10.0 * snoise(vec3(pos.xz * 0.02, time * 0.3));\\n    pos.y = min(pos.y, h);\\n    worldPos = (modelMatrix * vec4(pos, 1.0)).xyz;\\n    vec4 viewPosition = modelViewMatrix * vec4( pos, 1.0 );\\n    viewPos = viewPosition.xyz;\\n    worldNormal = normalize(mat3(modelMatrix) * normal);\\n    vec3 vNormal = normalize(normalMatrix * normal);\\n    viewNormal = vNormal;\\n    gl_Position = projectionMatrix * viewPosition;\\n}\"","\nvar content = require(\"!!./node_modules/css-loader/index.js!./node_modules/sass-loader/lib/loader.js!./style.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!./node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!./node_modules/css-loader/index.js!./node_modules/sass-loader/lib/loader.js!./style.scss\", function() {\n\t\tvar newContent = require(\"!!./node_modules/css-loader/index.js!./node_modules/sass-loader/lib/loader.js!./style.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}"],"sourceRoot":""}